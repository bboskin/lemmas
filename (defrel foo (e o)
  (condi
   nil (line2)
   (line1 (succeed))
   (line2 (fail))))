bash-3.2$ pwd
/Users/benboskin
bash-3.2$ cd acl2
bash-3.2$ cd books/acl2s
bash-3.2$ make
make: *** No targets specified and no makefile found.  Stop.
bash-3.2$ ls
acl2s-mode.lsp				doc.cert
base-theory.cert			doc.cert.out
base-theory.cert.out			doc.dx32fsl
base-theory.dx32fsl			doc.lisp
base-theory.lisp			doc.port
base-theory.port			mode-acl2s-dependencies.cert
ccg					mode-acl2s-dependencies.cert.out
cert.acl2				mode-acl2s-dependencies.dx32fsl
cgen					mode-acl2s-dependencies.lisp
custom.cert				mode-acl2s-dependencies.port
custom.cert.out				package.lsp
custom.dx32fsl				portcullis.acl2
custom.lisp				portcullis.cert
custom.port				portcullis.cert.out
defdata					portcullis.dx32fsl
defunc-regression.lsp			portcullis.lisp
defunc.cert				portcullis.port
defunc.cert.out				utilities.cert
defunc.dx32fsl				utilities.cert.out
defunc.lisp				utilities.dx32fsl
defunc.port				utilities.lisp
demos					utilities.port
bash-3.2$ make portcullis.a
make: *** No rule to make target `portcullis.a'.  Stop.
bash-3.2$ make portcullis.acl2 
make: Nothing to be done for `portcullis.acl2'.
bash-3.2$ cert.pl *.lisp
bash: cert.pl: command not found
bash-3.2$ pwd
/Users/benboskin/acl2/books/acl2s
bash-3.2$ git pull
remote: Enumerating objects: 496, done.        
remote: Counting objects: 100% (496/496), done.        
remote: Compressing objects: 100% (21/21), done.        
remote: Total 783 (delta 472), reused 494 (delta 472), pack-reused 287        
Receiving objects: 100% (783/783), 1.23 MiB | 0 bytes/s, done.
Resolving deltas: 100% (577/577), completed with 188 local objects.
From https://github.com/acl2/acl2
   ef4c1937e..f6e1734a2  master     -> origin/master
   ef4c1937e..1d754f4ee  testing    -> origin/testing
Updating ef4c1937e..f6e1734a2
Fast-forward
 apply-prim.lisp                                      |   19 +-
 apply-raw.lisp                                       | 1823 +++++++---
 apply.lisp                                           |  283 +-
 axioms.lisp                                          |  731 +++-
 basis-a.lisp                                         |    6 +-
 bin/purity.sh                                        |    3 +-
 books/GNUmakefile                                    |    8 +-
 books/acl2s/ccg/ccg.lisp                             |   16 +-
 books/acl2s/cgen/utilities.lisp                      |    2 +-
 books/acl2s/defdata/builtin-combinators.lisp         |    2 +-
 books/arithmetic-5/README                            |    3 +
 books/centaur/aignet/transforms.lisp                 |    1 +
 books/centaur/sv/failtest/run.lsp                    |    6 +-
 books/centaur/sv/svtv/process.lisp                   |   23 +-
 books/centaur/sv/tutorial/alu.lisp                   |    4 +-
 books/centaur/sv/vl/moddb.lisp                       |   22 +-
 books/centaur/sv/vl/top.lisp                         |   38 +-
 books/centaur/vl/doc.lisp                            |    2 +-
 books/centaur/vl/mlib/print-warnings.lisp            |    6 +-
 books/centaur/vl/mlib/remove-bad.lisp                |  121 +-
 books/centaur/vl/mlib/selfsize.lisp                  |    6 +-
 books/centaur/vl/simpconfig.lisp                     |   15 +-
 books/centaur/vl/util/warnings.lisp                  |   49 +-
 books/doc/relnotes.lisp                              |   11 +-
 books/hacking/redefun.lisp                           |    2 +-
 books/kestrel/apt/package.lsp                        |    1 +
 books/kestrel/apt/tailrec-reference.lisp             |    2 +-
 books/kestrel/apt/tailrec-tests.lisp                 |    6 +-
 books/kestrel/apt/tailrec.lisp                       |    2 +-
 books/kestrel/ethereum/bytes.lisp                    |   70 +-
 books/kestrel/ethereum/hex-prefix.lisp               |   30 +-
 books/kestrel/ethereum/nibbles.lisp                  |   24 +-
 books/kestrel/ethereum/package.lsp                   |    3 +-
 books/kestrel/ethereum/rlp.lisp                      |   89 +-
 books/kestrel/ethereum/scalars.lisp                  |    6 +-
 books/kestrel/java/atj/implementation.lisp           |    3 +
 .../utilities/digits-any-base/core-tests.lisp        |   77 +
 books/kestrel/utilities/digits-any-base/core.lisp    |  166 +
 books/kestrel/utilities/digits-any-base/pow2-1.lisp  |   13 +-
 books/kestrel/utilities/digits-any-base/pow2-2.lisp  |   13 +-
 books/kestrel/utilities/digits-any-base/pow2-3.lisp  |   13 +-
 books/kestrel/utilities/digits-any-base/pow2-4.lisp  |   13 +-
 books/kestrel/utilities/digits-any-base/pow2-8.lisp  |   13 +-
 .../utilities/digits-any-base/pow2-instances.lisp    |    2 +-
 books/kestrel/utilities/digits-any-base/pow2.lisp    |  108 +-
 books/kestrel/utilities/error-checking-tests.lisp    |   22 +
 books/kestrel/utilities/error-checking.lisp          |   19 +-
 books/misc/check-acl2-exports.lisp                   |    1 +
 books/projects/apply/apply-lemmas.lisp               |   26 +-
 books/projects/apply/report.lisp                     |   61 +-
 books/projects/async/adders/add-sub.lisp             |  100 +-
 books/projects/async/adders/adder.lisp               |   89 +-
 books/projects/async/adders/counter.lisp             |   18 +-
 books/projects/async/adders/subtractor.lisp          |   23 +-
 books/projects/async/arbitration/arb-merge.lisp      |   43 +-
 books/projects/async/arbitration/comp-interl.lisp    |   84 +-
 books/projects/async/arbitration/comp-interl2.lisp   |   91 +-
 books/projects/async/arbitration/interl-gcd.lisp     |   63 +-
 books/projects/async/arbitration/interl-ll.lisp      |   53 +-
 books/projects/async/arbitration/interl.lisp         |   48 +-
 books/projects/async/branch.lisp                     |   19 +-
 books/projects/async/comparators/fast-zero.lisp      |   25 +-
 books/projects/async/comparators/t-or-nor.lisp       |   48 +-
 books/projects/async/comparators/v-equal.lisp        |   26 +-
 books/projects/async/comparators/v-greater.lisp      |   60 +-
 books/projects/async/comparators/v-less.lisp         |   60 +-
 books/projects/async/de.lisp                         |    2 +-
 books/projects/async/f-functions.lisp                |   10 +-
 books/projects/async/fifo/README                     |    7 +
 books/projects/async/fifo/alt-branch.lisp            |   39 +-
 books/projects/async/fifo/alt-merge.lisp             |   39 +-
 books/projects/async/fifo/comp-v-or.lisp             |   57 +-
 books/projects/async/fifo/queue10-l.lisp             |   41 +-
 books/projects/async/fifo/queue10.lisp               |  590 ++++
 books/projects/async/fifo/queue11-l.lisp             |   46 +-
 books/projects/async/fifo/queue2.lisp                |   37 +-
 books/projects/async/fifo/queue20-l.lisp             |   41 +-
 books/projects/async/fifo/queue3-l.lisp              |   41 +-
 books/projects/async/fifo/queue3.lisp                |   37 +-
 books/projects/async/fifo/queue4-l.lisp              |   41 +-
 books/projects/async/fifo/queue4.lisp                |  549 +++
 books/projects/async/fifo/queue5-l.lisp              |   41 +-
 books/projects/async/fifo/queue5.lisp                |  578 +++
 books/projects/async/fifo/queue8-l.lisp              |   41 +-
 books/projects/async/fifo/queue9-l.lisp              |   46 +-
 books/projects/async/fifo/round-robin1.lisp          |   73 +-
 books/projects/async/fifo/round-robin2.lisp          |   64 +-
 books/projects/async/fifo/round-robin3.lisp          |   64 +-
 books/projects/async/fifo/simulators.lisp            |  305 +-
 books/projects/async/fifo/wig-wag.lisp               |   55 +-
 books/projects/async/gcd/README                      |    4 +-
 books/projects/async/gcd/comp-gcd-body.lisp          |   60 +-
 books/projects/async/gcd/comp-gcd-cond.lisp          |   61 +-
 books/projects/async/gcd/comp-gcd.lisp               |   52 +-
 books/projects/async/gcd/comp-gcd2.lisp              |   51 +-
 books/projects/async/gcd/gcd-body.lisp               |   27 +-
 books/projects/async/gcd/gcd-cond.lisp               |   29 +-
 books/projects/async/gcd/gcd.lisp                    |   52 +-
 books/projects/async/gcd/q10-comp-gcd.lisp           |  684 ++++
 books/projects/async/gcd/q10-gcd.lisp                |  665 ++++
 books/projects/async/gcd/q3-comp-gcd.lisp            |  700 ----
 books/projects/async/gcd/q3-gcd.lisp                 |  680 ----
 books/projects/async/gcd/simulators.lisp             |  124 +-
 books/projects/async/index.lisp                      |  344 +-
 books/projects/async/link-joint.lisp                 |   45 +-
 books/projects/async/macros.lisp                     |   10 +-
 books/projects/async/merge.lisp                      |   19 +-
 books/projects/async/package.lsp                     |   11 +-
 .../32-bit-serial-adder-control.lisp                 |   11 +-
 .../32-bit-serial-adder-old/32-bit-serial-adder.lisp |   87 +-
 .../serial-adder/32-bit-serial-adder-old/adder.lisp  |   89 +-
 .../32-bit-serial-adder-old/control-modules.lisp     |   35 +-
 .../32-bit-serial-adder-old/link-joint.lisp          |   53 +-
 .../serial-adder/32-bit-serial-adder-old/macros.lisp |    4 +-
 .../32-bit-serial-adder-old/store-n.lisp             |  206 +-
 .../32-bit-serial-adder-old/vector-module.lisp       |  137 +-
 books/projects/async/serial-adder/serial-add.lisp    |   49 +-
 books/projects/async/serial-adder/serial-sub.lisp    |   49 +-
 .../async/serial-adder/shift-register-piso.lisp      |   63 +-
 .../async/serial-adder/shift-register-sipo.lisp      |   73 +-
 .../async/serial-adder/shift-register2-piso.lisp     |   73 +-
 books/projects/async/store-n.lisp                    |  204 +-
 books/projects/async/tv-if.lisp                      |   37 +-
 books/projects/async/utils.lisp                      |   21 +-
 books/projects/async/vector-macros.lisp              |   67 +-
 books/projects/async/vector-module.lisp              |  137 +-
 books/projects/doc.lisp                              |  717 +---
 books/projects/filesystems/file-system-6.lisp        |    3 +
 books/projects/include-doc.lisp                      |    1 +
 books/projects/irv/acl2-customization.lsp            |   43 +
 books/projects/irv/cert.acl2                         |   39 +
 books/projects/irv/irv.lisp                          | 1893 ++++++++++
 books/projects/irv/package.lsp                       |   80 +
 books/projects/irv/portcullis.acl2                   |   39 +
 books/projects/irv/portcullis.lisp                   |   39 +
 books/projects/irv/satisfied-criteria.lisp           | 3728 ++++++++++++++++++++
 books/projects/irv/top.lisp                          |   46 +
 books/projects/x86isa/doc.lisp                       |    4 +
 .../x86isa/machine/instructions/push-and-pop.lisp    |   16 +-
 books/projects/x86isa/machine/opcode-maps.lisp       |    2 +-
 books/projects/x86isa/machine/x86.lisp               |   14 +-
 books/projects/x86isa/utils/constants.lisp           |  109 +-
 books/system/apply/apply.lisp                        |   22 +-
 books/system/doc/acl2-doc.lisp                       |   49 +-
 books/system/pseudo-good-worldp.lisp                 |   21 +
 books/system/to-do.txt                               |   32 +
 .../workshops/2007/dillinger-et-al/code/redefun.lisp |    2 +-
 books/workshops/2018/README                          |    7 +-
 books/workshops/2018/gamboa-cowles/LICENSE           |   34 +
 .../2018/gamboa-cowles/complex-continuity.lisp       | 1822 ++++++++++
 .../workshops/2018/gamboa-cowles/complex-lemmas.lisp |  374 ++
 .../2018/gamboa-cowles/complex-polynomials.lisp      | 3448 ++++++++++++++++++
 books/workshops/2018/gamboa-cowles/de-moivre.lisp    |  559 +++
 books/workshops/2018/gamboa-cowles/norm2.lisp        |  948 +++++
 books/workshops/2018/greve-gacek/LICENSE             |   24 +
 books/workshops/2018/greve-gacek/Makefile            |   11 +
 books/workshops/2018/greve-gacek/cert.acl2           |   15 +
 books/workshops/2018/greve-gacek/env-type.lisp       |  888 +++++
 .../workshops/2018/greve-gacek/fuzzm-datatypes.lisp  | 1068 ++++++
 books/workshops/2018/greve-gacek/intersection.lisp   |  486 +++
 books/workshops/2018/greve-gacek/poly-proofs.lisp    |  927 +++++
 books/workshops/2018/greve-gacek/poly.lisp           | 2325 ++++++++++++
 books/workshops/2018/greve-gacek/sets.lisp           |  540 +++
 books/workshops/2018/greve-gacek/top.lisp            |  342 ++
 books/workshops/2018/greve-gacek/types.lisp          |  394 +++
 books/workshops/2018/greve-gacek/varid-type.lisp     |  164 +
 books/workshops/2018/kwan-greenstreet/LICENSE        |   19 +
 books/workshops/2018/kwan-greenstreet/README         |   10 +
 .../2018/kwan-greenstreet/cauchy-schwarz.lisp        |  594 ++++
 .../workshops/2018/kwan-greenstreet/continuity.lisp  |   89 +
 books/workshops/2018/kwan-greenstreet/convex.lisp    |  461 +++
 books/workshops/2018/kwan-greenstreet/ftc-2.lisp     |  958 +++++
 books/workshops/2018/kwan-greenstreet/metric.lisp    |  812 +++++
 .../workshops/2018/kwan-greenstreet/nesterov-1.lisp  | 1389 ++++++++
 .../workshops/2018/kwan-greenstreet/nesterov-2.lisp  |  939 +++++
 .../workshops/2018/kwan-greenstreet/nesterov-3.lisp  | 2082 +++++++++++
 .../workshops/2018/kwan-greenstreet/nesterov-4.lisp  |  437 +++
 .../2018/kwan-greenstreet/nesterov-top.lisp          |   44 +
 books/workshops/2018/kwan-greenstreet/norm.lisp      |  162 +
 books/workshops/2018/kwan-greenstreet/top.lisp       |   29 +
 books/workshops/2018/kwan-greenstreet/vectors.lisp   |  430 +++
 books/workshops/2018/mehta/file-system-6.lisp        |    3 +
 books/workshops/2018/sumners/acl2-customization.lsp  |    5 +
 books/workshops/2018/sumners/aignet-ipasir-off.lisp  |  197 ++
 books/workshops/2018/sumners/alu.v                   |  141 +
 books/workshops/2018/sumners/alu_in.vcd              |   93 +
 books/workshops/2018/sumners/cert.acl2               |    2 +
 books/workshops/2018/sumners/exa.lisp                |  157 +
 books/workshops/2018/sumners/exbase.lisp             |  622 ++++
 books/workshops/2018/sumners/exload.lisp             |    2 +
 books/workshops/2018/sumners/exloop.lisp             | 1593 +++++++++
 books/workshops/2018/sumners/exsim.lisp              |  839 +++++
 books/workshops/2018/sumners/extra.lisp              |  727 ++++
 books/workshops/2018/sumners/extypes.lisp            |  397 +++
 books/workshops/2018/sumners/ipasir-tools-off.lisp   |  192 +
 books/workshops/2018/sumners/nxtbl.lisp              |  704 ++++
 books/workshops/2018/sumners/nxtypes.lisp            |  149 +
 books/workshops/2018/sumners/package.lsp             |  137 +
 books/workshops/2018/sumners/portcullis.acl2         |    3 +
 books/workshops/2018/sumners/portcullis.lisp         |    1 +
 books/workshops/2018/sumners/readme.lisp             |   66 +
 books/workshops/2018/sumners/smq.v                   |  724 ++++
 books/workshops/2018/sumners/smq_in.vcd              |   79 +
 books/workshops/2018/sumners/support.lisp            |  215 ++
 books/workshops/2018/sumners/svcnf.lisp              | 1186 +++++++
 books/workshops/2018/sumners/toy.v                   |   39 +
 books/workshops/2018/sumners/toy_in.vcd              |   77 +
 books/workshops/2018/sumners/vcd.lisp                |  929 +++++
 books/workshops/2018/sumners/vcdtypes.lisp           |   86 +
 books/workshops/2018/whats-new-books-talk/slides.tex |  698 +++-
 defpkgs.lisp                                         |    6 +-
 defthm.lisp                                          |   28 +-
 defuns.lisp                                          |  744 ++--
 doc.lisp                                             |   59 +-
 history-management.lisp                              |  227 +-
 interface-raw.lisp                                   |   22 +-
 other-events.lisp                                    |  190 +-
 simplify.lisp                                        |    2 +-
 tau.lisp                                             |   45 -
 translate.lisp                                       | 2714 ++++++++++++--
 220 files changed, 50105 insertions(+), 6417 deletions(-)
 create mode 100644 books/projects/async/fifo/queue10.lisp
 create mode 100644 books/projects/async/fifo/queue4.lisp
 create mode 100644 books/projects/async/fifo/queue5.lisp
 create mode 100644 books/projects/async/gcd/q10-comp-gcd.lisp
 create mode 100644 books/projects/async/gcd/q10-gcd.lisp
 delete mode 100644 books/projects/async/gcd/q3-comp-gcd.lisp
 delete mode 100644 books/projects/async/gcd/q3-gcd.lisp
 create mode 100644 books/projects/irv/acl2-customization.lsp
 create mode 100644 books/projects/irv/cert.acl2
 create mode 100644 books/projects/irv/irv.lisp
 create mode 100644 books/projects/irv/package.lsp
 create mode 100644 books/projects/irv/portcullis.acl2
 create mode 100644 books/projects/irv/portcullis.lisp
 create mode 100644 books/projects/irv/satisfied-criteria.lisp
 create mode 100644 books/projects/irv/top.lisp
 create mode 100644 books/workshops/2018/gamboa-cowles/LICENSE
 create mode 100644 books/workshops/2018/gamboa-cowles/complex-continuity.lisp
 create mode 100644 books/workshops/2018/gamboa-cowles/complex-lemmas.lisp
 create mode 100644 books/workshops/2018/gamboa-cowles/complex-polynomials.lisp
 create mode 100644 books/workshops/2018/gamboa-cowles/de-moivre.lisp
 create mode 100644 books/workshops/2018/gamboa-cowles/norm2.lisp
 create mode 100644 books/workshops/2018/greve-gacek/LICENSE
 create mode 100644 books/workshops/2018/greve-gacek/Makefile
 create mode 100644 books/workshops/2018/greve-gacek/cert.acl2
 create mode 100644 books/workshops/2018/greve-gacek/env-type.lisp
 create mode 100644 books/workshops/2018/greve-gacek/fuzzm-datatypes.lisp
 create mode 100644 books/workshops/2018/greve-gacek/intersection.lisp
 create mode 100644 books/workshops/2018/greve-gacek/poly-proofs.lisp
 create mode 100644 books/workshops/2018/greve-gacek/poly.lisp
 create mode 100644 books/workshops/2018/greve-gacek/sets.lisp
 create mode 100644 books/workshops/2018/greve-gacek/top.lisp
 create mode 100644 books/workshops/2018/greve-gacek/types.lisp
 create mode 100644 books/workshops/2018/greve-gacek/varid-type.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/LICENSE
 create mode 100755 books/workshops/2018/kwan-greenstreet/README
 create mode 100755 books/workshops/2018/kwan-greenstreet/cauchy-schwarz.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/continuity.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/convex.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/ftc-2.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/metric.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/nesterov-1.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/nesterov-2.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/nesterov-3.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/nesterov-4.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/nesterov-top.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/norm.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/top.lisp
 create mode 100755 books/workshops/2018/kwan-greenstreet/vectors.lisp
 create mode 100644 books/workshops/2018/sumners/acl2-customization.lsp
 create mode 100755 books/workshops/2018/sumners/aignet-ipasir-off.lisp
 create mode 100644 books/workshops/2018/sumners/alu.v
 create mode 100644 books/workshops/2018/sumners/alu_in.vcd
 create mode 100644 books/workshops/2018/sumners/cert.acl2
 create mode 100644 books/workshops/2018/sumners/exa.lisp
 create mode 100644 books/workshops/2018/sumners/exbase.lisp
 create mode 100644 books/workshops/2018/sumners/exload.lisp
 create mode 100644 books/workshops/2018/sumners/exloop.lisp
 create mode 100644 books/workshops/2018/sumners/exsim.lisp
 create mode 100644 books/workshops/2018/sumners/extra.lisp
 create mode 100644 books/workshops/2018/sumners/extypes.lisp
 create mode 100755 books/workshops/2018/sumners/ipasir-tools-off.lisp
 create mode 100644 books/workshops/2018/sumners/nxtbl.lisp
 create mode 100644 books/workshops/2018/sumners/nxtypes.lisp
 create mode 100644 books/workshops/2018/sumners/package.lsp
 create mode 100644 books/workshops/2018/sumners/portcullis.acl2
 create mode 100644 books/workshops/2018/sumners/portcullis.lisp
 create mode 100644 books/workshops/2018/sumners/readme.lisp
 create mode 100644 books/workshops/2018/sumners/smq.v
 create mode 100644 books/workshops/2018/sumners/smq_in.vcd
 create mode 100644 books/workshops/2018/sumners/support.lisp
 create mode 100644 books/workshops/2018/sumners/svcnf.lisp
 create mode 100644 books/workshops/2018/sumners/toy.v
 create mode 100644 books/workshops/2018/sumners/toy_in.vcd
 create mode 100644 books/workshops/2018/sumners/vcd.lisp
 create mode 100644 books/workshops/2018/sumners/vcdtypes.lisp
bash-3.2$ ls
acl2s-mode.lsp				doc.cert
base-theory.cert			doc.cert.out
base-theory.cert.out			doc.dx32fsl
base-theory.dx32fsl			doc.lisp
base-theory.lisp			doc.port
base-theory.port			mode-acl2s-dependencies.cert
ccg					mode-acl2s-dependencies.cert.out
cert.acl2				mode-acl2s-dependencies.dx32fsl
cgen					mode-acl2s-dependencies.lisp
custom.cert				mode-acl2s-dependencies.port
custom.cert.out				package.lsp
custom.dx32fsl				portcullis.acl2
custom.lisp				portcullis.cert
custom.port				portcullis.cert.out
defdata					portcullis.dx32fsl
defunc-regression.lsp			portcullis.lisp
defunc.cert				portcullis.port
defunc.cert.out				utilities.cert
defunc.dx32fsl				utilities.cert.out
defunc.lisp				utilities.dx32fsl
defunc.port				utilities.lisp
demos					utilities.port
bash-3.2$ cert.pl *.lisp
bash: cert.pl: command not found
bash-3.2$ ./cert.pl *.lisp
bash: ./cert.pl: No such file or directory
bash-3.2$ source ~/.bash_profile
bash-3.2$ cert.pl *.lisp
ACL2 executable not found.  Please specify with --acl2 command line
flag or ACL2 environment variable.
System books directory is /Users/benboskin/acl2/books
make -j 1 -f Makefile-tmp --no-builtin-rules   all-cert-pl-certs
Error: failed to find $ACL2 (acl2) in the PATH.
make: *** [../hacking/redefun.cert] Error 1
bash-3.2$ source ~/.bash_profile
bash-3.2$ cert.pl *.lisp
ACL2 executable not found.  Please specify with --acl2 command line
flag or ACL2 environment variable.
System books directory is /Users/benboskin/acl2/books
make -j 1 -f Makefile-tmp --no-builtin-rules   all-cert-pl-certs
Error: failed to find $ACL2 (acl2) in the PATH.
make: *** [../hacking/redefun.cert] Error 1
bash-3.2$ cp ../../saved_acl2 ~/bin/saved_acl2
bash-3.2$ source ~/.bash_profile
bash-3.2$ cert.pl *.lisp
ACL2 executable not found.  Please specify with --acl2 command line
flag or ACL2 environment variable.
System books directory is /Users/benboskin/acl2/books
  C-c C-c
bash-3.2$ cert.pl *.lisp --acl2 ~/bin/saved_acl2 
ACL2 executable is /Users/benboskin/bin/saved_acl2
System books directory is /Users/benboskin/acl2/books
make -j 1 -f Makefile-tmp --no-builtin-rules   all-cert-pl-certs
Making /Users/benboskin/acl2/books/acl2s/../hacking/redefun.cert on 31-Oct-2018 12:04:28
Built /Users/benboskin/acl2/books/acl2s/../hacking/redefun.cert (0.662s)
Making /Users/benboskin/acl2/books/acl2s/../hacking/table-guard.cert on 31-Oct-2018 12:04:29
ls: table-guard.cert: No such file or directory
**CERTIFICATION FAILED** for /Users/benboskin/acl2/books/acl2s/../hacking/table-guard.lisp

   |  Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
   |  See the documentation topic note-8-1 for recent changes.
   |  Note: We have modified the prompt in some underlying Lisps to further
   |  distinguish it from the ACL2 prompt.
   | 
   | ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>
   | Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
   | * 
   | #<PACKAGE "ACL2">
   | * 
   | PROVE
   | * 
   | CERTIFY-BOOK-FN
   | * 
   | ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !><state>
   | ACL2 !> "ACL2"
   | ACL2 !> (:EXIT 1)
   | ACL2 !> (PROVE PROOF-TREE
   |         WARNING OBSERVATION EVENT HISTORY)
   | ACL2 !> T
   | ACL2 !>GC-VERBOSE is not supported in this Common Lisp.
   | Contact the ACL2 developers if you would like to help add such support.NIL
   | ACL2 !> "ACL2"
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.03 seconds (prove: 0.00, print: 0.00, other: 0.03)
   |  "ACL2-HACKER"
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "rewrite-code" ...):
   | Unable to load compiled file for book
   |   /Users/benboskin/acl2/books/hacking/rewrite-code.lisp
   | because the compiled file does not exist.  See :DOC include-book. 
   | No load was in progress for any parent book.
   | 
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "rewrite-code" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.33 seconds (prove: 0.00, print: 0.00, other: 0.33)
   |  "/Users/benboskin/acl2/books/hacking/rewrite-code.lisp"
   | ACL2 !> T
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "REWRITE-CODE" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !> :CONTINUE
   | ACL2 !>
   | ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "defcode" ...):  Unable
   | to load compiled file for book
   |   /Users/benboskin/acl2/books/hacking/defcode.lisp
   | because the compiled file does not exist.  See :DOC include-book. 
   | No load was in progress for any parent book.
   | 
   | 
   | TTAG NOTE (for included book): Adding ttag :DEFCODE from book /Users/benboskin/acl2/books/hacking/progn-bang-enh.
   | 
   | TTAG NOTE (for included book): Adding ttag :DEFCODE from book /Users/benboskin/acl2/books/hacking/defcode.
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "defcode" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.17 seconds (prove: 0.00, print: 0.00, other: 0.17)
   | "/Users/benboskin/acl2/books/hacking/defcode.lisp"
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "rewrite-code" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   | :REDUNDANT
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "redefun" ...)
   | Rules: NIL
   | Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
   | "/Users/benboskin/acl2/books/hacking/redefun.lisp"
   | :INVISIBLE
   | T
   | 
   | TTAG NOTE: Adding ttag :TABLE-GUARD from book /Users/benboskin/acl2/books/hacking/table-guard.
   | :TABLE-GUARD
   | 
   | Summary
   | Form:  ( MAKE-EVENT (CONS ...))
   | Rules: NIL
   | Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
   | :PASSED
   | 
   | 
   | HARD ACL2 ERROR in ASSERT$:  Assertion failed:
   | (ASSERT$
   |  (EQUAL (LENGTH TUPLE) 24)
   |  (LET*
   |   ((NAME (CAR DEF))
   |    (NEW-WRLD (NTH 18 TUPLE))
   |    (OLD-SYMBOL-CLASS (GETPROP NAME # 0 # WRLD))
   |    (NEW-SYMBOL-CLASS (NTH 15 TUPLE))
   |    (OLD-FORMALS (GETPROP NAME # 0 # WRLD))
   |    (NEW-FORMALS (GETPROP NAME # 0 # NEW-WRLD))
   |    (OLD-STOBJS-IN (GETPROP NAME # 0 # WRLD))
   |    ...)
   |   (COND
   |    ((EQL OLD-SYMBOL-CLASS 0)
   |     (ER SOFT
   |         CTX "No existing definition: ~x0" NAME))
   |    ((NTH 19 TUPLE)
   |     (ER
   |      SOFT CTX
   |      "Please do not redefun a non-executable function.  The ~
   |                   offending definition is: ~x0."
   |      DEF))
   |    ((NOT #)
   |     (ER SOFT CTX
   |         "Old definition should have defun-mode :program.  Sorry."))
   |    ((NOT #)
   |     (ER SOFT CTX
   |         "New definition should have defun-mode :program.  Sorry."))
   |    ((NOT #)
   |     (ER
   |      SOFT CTX
   |      "Please use the same formal parameter list when redefining. ~
   |                   Previous formals: ~x0"
   |      OLD-FORMALS))
   |    ((NOT #)
   |     (ER
   |      SOFT CTX
   |      "New definition should have the same stobjs-in.Previously, ~
   |                   ~x0.  Specified, ~x1."
   |      OLD-STOBJS-IN NEW-STOBJS-IN))
   |    ...)))
   | (See :DOC set-iprint to be able to see elided values in this message.)
   | 
   | 
   | 
   | ACL2 Error in ( PROGN! (ER-PROGN ...) ...):  Evaluation aborted.  To
   | debug see :DOC print-gv, see :DOC trace, and see :DOC wet.
   | 
   | 
   | Summary
   | Form:  ( PROGN! (ER-PROGN ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (ER-PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (DEFCODE-FN ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (DEFCODE-FN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN! :LOOP-ONLY ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (PROGN! :LOOP-ONLY ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN (ASSERT-INCLUDE-DEFUN-MATCHES-CERTIFY-DEFUN TABLE-FN1)
   | ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN (ASSERT-INCLUDE-DEFUN-MATCHES-CERTIFY-DEFUN TABLE-FN1)
   | ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( MAKE-EVENT (ER-LET* ...))
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( MAKE-EVENT (ER-LET* ...)):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( MAKE-EVENT (COMPUTE-COPY-DEFUN+REWRITE ...))
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( MAKE-EVENT (COMPUTE-COPY-DEFUN+REWRITE ...)):  See
   | :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN (REDEFUN+REWRITE TABLE-FN1 ...) ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN (REDEFUN+REWRITE TABLE-FN1 ...) ...):  See :DOC
   | failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN ...) ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN! (PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  (CERTIFY-BOOK "table-guard" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.23 seconds (prove: 0.00, print: 0.00, other: 0.23)
   | 
   | ACL2 Error in (CERTIFY-BOOK "table-guard" ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | ; (EV-REC *RETURN-LAST-ARG3* ...) took 
   | ; 0.23 seconds realtime, 0.22 seconds runtime
   | ; (13,373,184 bytes allocated).
   | ACL2 !>Bye.
   | Exit code from ACL2 is 0
   | table-guard.cert seems to be missing


**CERTIFICATION FAILED** for /Users/benboskin/acl2/books/acl2s/../hacking/table-guard.lisp

make: *** [../hacking/table-guard.cert] Error 1
bash-3.2$ pwd
/Users/benboskin/acl2/books/acl2s
bash-3.2$ cd ..
bash-3.2$ cd hacking/
bash-3.2$ cert.pl *.lisp --acl2 ~/bin/saved_acl2 
ACL2 executable is /Users/benboskin/bin/saved_acl2
System books directory is /Users/benboskin/acl2/books
make -j 1 -f Makefile-tmp --no-builtin-rules   all-cert-pl-certs
Making /Users/benboskin/acl2/books/hacking/table-guard.cert on 31-Oct-2018 12:05:46
ls: table-guard.cert: No such file or directory
**CERTIFICATION FAILED** for /Users/benboskin/acl2/books/hacking/table-guard.lisp

   |  Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
   |  See the documentation topic note-8-1 for recent changes.
   |  Note: We have modified the prompt in some underlying Lisps to further
   |  distinguish it from the ACL2 prompt.
   | 
   | ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>
   | Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
   | * 
   | #<PACKAGE "ACL2">
   | * 
   | PROVE
   | * 
   | CERTIFY-BOOK-FN
   | * 
   | ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !><state>
   | ACL2 !> "ACL2"
   | ACL2 !> (:EXIT 1)
   | ACL2 !> (PROVE PROOF-TREE
   |         WARNING OBSERVATION EVENT HISTORY)
   | ACL2 !> T
   | ACL2 !>GC-VERBOSE is not supported in this Common Lisp.
   | Contact the ACL2 developers if you would like to help add such support.NIL
   | ACL2 !> "ACL2"
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   |  "ACL2-HACKER"
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "rewrite-code" ...):
   | Unable to load compiled file for book
   |   /Users/benboskin/acl2/books/hacking/rewrite-code.lisp
   | because the compiled file does not exist.  See :DOC include-book. 
   | No load was in progress for any parent book.
   | 
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "rewrite-code" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.34 seconds (prove: 0.00, print: 0.00, other: 0.34)
   |  "/Users/benboskin/acl2/books/hacking/rewrite-code.lisp"
   | ACL2 !> T
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "REWRITE-CODE" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !>
   | ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/hacking/".
   | System books directory "/Users/benboskin/acl2/books/".
   | Type :help for help.
   | Type (good-bye) to quit completely out of ACL2.
   | 
   | ACL2 !>> "ACL2"
   | ACL2 !>>
   | Summary
   | Form:  ( DEFPKG "ACL2-HACKER" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   |  :REDUNDANT
   | ACL2 !>>Bye.
   |  :EOF
   | ACL2 !> :CONTINUE
   | ACL2 !>
   | ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "defcode" ...):  Unable
   | to load compiled file for book
   |   /Users/benboskin/acl2/books/hacking/defcode.lisp
   | because the compiled file does not exist.  See :DOC include-book. 
   | No load was in progress for any parent book.
   | 
   | 
   | TTAG NOTE (for included book): Adding ttag :DEFCODE from book /Users/benboskin/acl2/books/hacking/progn-bang-enh.
   | 
   | TTAG NOTE (for included book): Adding ttag :DEFCODE from book /Users/benboskin/acl2/books/hacking/defcode.
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "defcode" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.14 seconds (prove: 0.00, print: 0.00, other: 0.14)
   | "/Users/benboskin/acl2/books/hacking/defcode.lisp"
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "rewrite-code" ...)
   | Rules: NIL
   | Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
   | :REDUNDANT
   | 
   | Summary
   | Form:  ( INCLUDE-BOOK "redefun" ...)
   | Rules: NIL
   | Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
   | "/Users/benboskin/acl2/books/hacking/redefun.lisp"
   | :INVISIBLE
   | T
   | 
   | TTAG NOTE: Adding ttag :TABLE-GUARD from book /Users/benboskin/acl2/books/hacking/table-guard.
   | :TABLE-GUARD
   | 
   | Summary
   | Form:  ( MAKE-EVENT (CONS ...))
   | Rules: NIL
   | Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
   | :PASSED
   | 
   | 
   | HARD ACL2 ERROR in ASSERT$:  Assertion failed:
   | (ASSERT$
   |  (EQUAL (LENGTH TUPLE) 24)
   |  (LET*
   |   ((NAME (CAR DEF))
   |    (NEW-WRLD (NTH 18 TUPLE))
   |    (OLD-SYMBOL-CLASS (GETPROP NAME # 0 # WRLD))
   |    (NEW-SYMBOL-CLASS (NTH 15 TUPLE))
   |    (OLD-FORMALS (GETPROP NAME # 0 # WRLD))
   |    (NEW-FORMALS (GETPROP NAME # 0 # NEW-WRLD))
   |    (OLD-STOBJS-IN (GETPROP NAME # 0 # WRLD))
   |    ...)
   |   (COND
   |    ((EQL OLD-SYMBOL-CLASS 0)
   |     (ER SOFT
   |         CTX "No existing definition: ~x0" NAME))
   |    ((NTH 19 TUPLE)
   |     (ER
   |      SOFT CTX
   |      "Please do not redefun a non-executable function.  The ~
   |                   offending definition is: ~x0."
   |      DEF))
   |    ((NOT #)
   |     (ER SOFT CTX
   |         "Old definition should have defun-mode :program.  Sorry."))
   |    ((NOT #)
   |     (ER SOFT CTX
   |         "New definition should have defun-mode :program.  Sorry."))
   |    ((NOT #)
   |     (ER
   |      SOFT CTX
   |      "Please use the same formal parameter list when redefining. ~
   |                   Previous formals: ~x0"
   |      OLD-FORMALS))
   |    ((NOT #)
   |     (ER
   |      SOFT CTX
   |      "New definition should have the same stobjs-in.Previously, ~
   |                   ~x0.  Specified, ~x1."
   |      OLD-STOBJS-IN NEW-STOBJS-IN))
   |    ...)))
   | (See :DOC set-iprint to be able to see elided values in this message.)
   | 
   | 
   | 
   | ACL2 Error in ( PROGN! (ER-PROGN ...) ...):  Evaluation aborted.  To
   | debug see :DOC print-gv, see :DOC trace, and see :DOC wet.
   | 
   | 
   | Summary
   | Form:  ( PROGN! (ER-PROGN ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (ER-PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (DEFCODE-FN ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (DEFCODE-FN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN! :LOOP-ONLY ...) ...)
   | Rules: NIL
   | Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
   | 
   | ACL2 Error in ( PROGN! (PROGN! :LOOP-ONLY ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN (ASSERT-INCLUDE-DEFUN-MATCHES-CERTIFY-DEFUN TABLE-FN1)
   | ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN (ASSERT-INCLUDE-DEFUN-MATCHES-CERTIFY-DEFUN TABLE-FN1)
   | ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN ...) ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN! (PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( MAKE-EVENT (ER-LET* ...))
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( MAKE-EVENT (ER-LET* ...)):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( MAKE-EVENT (COMPUTE-COPY-DEFUN+REWRITE ...))
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( MAKE-EVENT (COMPUTE-COPY-DEFUN+REWRITE ...)):  See
   | :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN (REDEFUN+REWRITE TABLE-FN1 ...) ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN (REDEFUN+REWRITE TABLE-FN1 ...) ...):  See :DOC
   | failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  ( PROGN! (PROGN ...) ...)
   | Rules: NIL
   | Time:  0.05 seconds (prove: 0.00, print: 0.00, other: 0.05)
   | 
   | ACL2 Error in ( PROGN! (PROGN ...) ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | 
   | Summary
   | Form:  (CERTIFY-BOOK "table-guard" ...)
   | Rules: NIL
   | Warnings:  Compiled file
   | Time:  0.22 seconds (prove: 0.00, print: 0.00, other: 0.22)
   | 
   | ACL2 Error in (CERTIFY-BOOK "table-guard" ...):  See :DOC failure.
   | 
   | ******** FAILED ********
   | ; (EV-REC *RETURN-LAST-ARG3* ...) took 
   | ; 0.22 seconds realtime, 0.20 seconds runtime
   | ; (13,373,224 bytes allocated).
   | ACL2 !>Bye.
   | Exit code from ACL2 is 0
   | table-guard.cert seems to be missing


**CERTIFICATION FAILED** for /Users/benboskin/acl2/books/hacking/table-guard.lisp

make: *** [table-guard.cert] Error 1
bash-3.2$ pwd
/Users/benboskin/acl2/books/hacking
bash-3.2$ cd ..
bash-3.2$ cd ..
bash-3.2$ pwd
/Users/benboskin/acl2
bash-3.2$ git checkout a146a14cb5e9dbccf47477bb6e59a5b423c3403a
Note: checking out 'a146a14cb5e9dbccf47477bb6e59a5b423c3403a'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at a146a14cb... Minor edits to slides.
bash-3.2$ cd books/acl2s
bash-3.2$ cert.pl *.lisp --acl2 ~/bin/saved_acl2 
ACL2 executable is /Users/benboskin/bin/saved_acl2
System books directory is /Users/benboskin/acl2/books
make -j 1 -f Makefile-tmp --no-builtin-rules   all-cert-pl-certs
Making /Users/benboskin/acl2/books/acl2s/../hacking/redefun.cert on 31-Oct-2018 12:18:33
Built /Users/benboskin/acl2/books/acl2s/../hacking/redefun.cert (0.559s)
Making /Users/benboskin/acl2/books/acl2s/../hacking/table-guard.cert on 31-Oct-2018 12:18:34
Built /Users/benboskin/acl2/books/acl2s/../hacking/table-guard.cert (1.526s)
Making /Users/benboskin/acl2/books/acl2s/../hacking/all.cert on 31-Oct-2018 12:18:35
Built /Users/benboskin/acl2/books/acl2s/../hacking/all.cert (1.720s)
Making /Users/benboskin/acl2/books/acl2s/../std/strings/pretty.cert on 31-Oct-2018 12:18:37
Built /Users/benboskin/acl2/books/acl2s/../std/strings/pretty.cert (44.681s)
Making /Users/benboskin/acl2/books/acl2s/../system/doc/acl2-doc.cert on 31-Oct-2018 12:19:22
Built /Users/benboskin/acl2/books/acl2s/../system/doc/acl2-doc.cert (5.727s)
Making /Users/benboskin/acl2/books/acl2s/../system/doc/acl2-doc-wrap.cert on 31-Oct-2018 12:19:29
Built /Users/benboskin/acl2/books/acl2s/../system/doc/acl2-doc-wrap.cert (4.492s)
Making /Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.cert on 31-Oct-2018 12:19:33
Built /Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.cert (5.030s)
Making /Users/benboskin/acl2/books/acl2s/defdata/defdata-core.cert on 31-Oct-2018 12:19:38
Built /Users/benboskin/acl2/books/acl2s/defdata/defdata-core.cert (5.668s)
Making /Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.cert on 31-Oct-2018 12:19:44
Built /Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.cert (6.107s)
Making /Users/benboskin/acl2/books/acl2s/defdata/var-book.cert on 31-Oct-2018 12:19:50
Built /Users/benboskin/acl2/books/acl2s/defdata/var-book.cert (10.206s)
Making /Users/benboskin/acl2/books/acl2s/defdata/base.cert on 31-Oct-2018 12:20:00
Built /Users/benboskin/acl2/books/acl2s/defdata/base.cert (17.170s)
Making /Users/benboskin/acl2/books/acl2s/defdata/sig.cert on 31-Oct-2018 12:20:18
Built /Users/benboskin/acl2/books/acl2s/defdata/sig.cert (7.633s)
Making /Users/benboskin/acl2/books/acl2s/defdata/top.cert on 31-Oct-2018 12:20:25
Built /Users/benboskin/acl2/books/acl2s/defdata/top.cert (9.829s)
Making /Users/benboskin/acl2/books/acl2s/base-theory.cert on 31-Oct-2018 12:20:35
Built /Users/benboskin/acl2/books/acl2s/base-theory.cert (70.858s)
Making /Users/benboskin/acl2/books/acl2s/ccg/ccg.cert on 31-Oct-2018 12:21:46
Built /Users/benboskin/acl2/books/acl2s/ccg/ccg.cert (6.621s)
Making /Users/benboskin/acl2/books/acl2s/cgen/utilities.cert on 31-Oct-2018 12:21:53
Built /Users/benboskin/acl2/books/acl2s/cgen/utilities.cert (3.807s)
Making /Users/benboskin/acl2/books/acl2s/cgen/type.cert on 31-Oct-2018 12:21:57
Built /Users/benboskin/acl2/books/acl2s/cgen/type.cert (4.638s)
Making /Users/benboskin/acl2/books/acl2s/cgen/simple-graph-array.cert on 31-Oct-2018 12:22:02
Built /Users/benboskin/acl2/books/acl2s/cgen/simple-graph-array.cert (3.753s)
Making /Users/benboskin/acl2/books/acl2s/cgen/cgen-state.cert on 31-Oct-2018 12:22:06
Built /Users/benboskin/acl2/books/acl2s/cgen/cgen-state.cert (5.669s)
Making /Users/benboskin/acl2/books/acl2s/cgen/propagate.cert on 31-Oct-2018 12:22:11
Built /Users/benboskin/acl2/books/acl2s/cgen/propagate.cert (4.683s)
Making /Users/benboskin/acl2/books/acl2s/cgen/infer-enum-shape.cert on 31-Oct-2018 12:22:16
Built /Users/benboskin/acl2/books/acl2s/cgen/infer-enum-shape.cert (8.903s)
Making /Users/benboskin/acl2/books/acl2s/cgen/build-enumcalls.cert on 31-Oct-2018 12:22:25
Built /Users/benboskin/acl2/books/acl2s/cgen/build-enumcalls.cert (8.776s)
Making /Users/benboskin/acl2/books/acl2s/cgen/select.cert on 31-Oct-2018 12:22:34
Built /Users/benboskin/acl2/books/acl2s/cgen/select.cert (6.799s)
Making /Users/benboskin/acl2/books/acl2s/cgen/simple-search.cert on 31-Oct-2018 12:22:41
Built /Users/benboskin/acl2/books/acl2s/cgen/simple-search.cert (9.349s)
Making /Users/benboskin/acl2/books/acl2s/cgen/incremental-search.cert on 31-Oct-2018 12:22:50
Built /Users/benboskin/acl2/books/acl2s/cgen/incremental-search.cert (9.956s)
Making /Users/benboskin/acl2/books/acl2s/cgen/cgen-search.cert on 31-Oct-2018 12:23:00
Built /Users/benboskin/acl2/books/acl2s/cgen/cgen-search.cert (10.617s)
Making /Users/benboskin/acl2/books/acl2s/cgen/callback.cert on 31-Oct-2018 12:23:11
Built /Users/benboskin/acl2/books/acl2s/cgen/callback.cert (11.279s)
Making /Users/benboskin/acl2/books/acl2s/cgen/cgen-rules.cert on 31-Oct-2018 12:23:22
Built /Users/benboskin/acl2/books/acl2s/cgen/cgen-rules.cert (4.439s)
Making /Users/benboskin/acl2/books/acl2s/cgen/prove-cgen.cert on 31-Oct-2018 12:23:27
Built /Users/benboskin/acl2/books/acl2s/cgen/prove-cgen.cert (11.488s)
Making /Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.cert on 31-Oct-2018 12:23:38
Built /Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.cert (14.674s)
Making /Users/benboskin/acl2/books/acl2s/cgen/top.cert on 31-Oct-2018 12:23:53
Built /Users/benboskin/acl2/books/acl2s/cgen/top.cert (25.369s)
Making /Users/benboskin/acl2/books/acl2s/defunc.cert on 31-Oct-2018 12:24:19
Built /Users/benboskin/acl2/books/acl2s/defunc.cert (21.311s)
Making /Users/benboskin/acl2/books/acl2s/custom.cert on 31-Oct-2018 12:24:40
Built /Users/benboskin/acl2/books/acl2s/custom.cert (17.476s)
Making /Users/benboskin/acl2/books/acl2s/doc.cert on 31-Oct-2018 12:24:58
Built /Users/benboskin/acl2/books/acl2s/doc.cert (22.249s)
Making /Users/benboskin/acl2/books/acl2s/mode-acl2s-dependencies.cert on 31-Oct-2018 12:25:20
Built /Users/benboskin/acl2/books/acl2s/mode-acl2s-dependencies.cert (78.215s)
bash-3.2$ pwd
/Users/benboskin/acl2/books/acl2s
bash-3.2$ cd ..
bash-3.2$ cd ..
bash-3.2$ cd ..
bash-3.2$ pwd
/Users/benboskin
bash-3.2$ cd acl2
bash-3.2$ ./saved_acl2 
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !>(add-include-book-dir :acl2s-modes "~/acl2/books/acl2s/")
 ((:ACL2S-MODES . "/Users/benboskin/acl2/books/acl2s/"))
ACL2 !>(ld "acl2s-mode.lsp" :dir :acl2s-modes)

ACL2 Version 8.1.  Level 2.  Cbd "/Users/benboskin/acl2/books/acl2s/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !>>
TTAG NOTE: Printing of ttag notes is being put into deferred mode.

Summary
Form:  ( MAKE-EVENT (ER-PROGN ...))
Rules: NIL
Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
ACL2 !>>
ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "std/portcullis" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/std/portcullis.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "hacking/rewrite-code"
...):  Unable to load compiled file for book
  /Users/benboskin/acl2/books/hacking/rewrite-code.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


TTAG NOTE (for included book): Adding ttag :CCG from book /Users/benboskin/acl2/books/acl2s/ccg/ccg.

ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "misc/expander" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/misc/expander.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "hacking/hacker" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/hacking/hacker.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "defstruct-parsing"
...):  Unable to load compiled file for book
  /Users/benboskin/acl2/books/hacking/defstruct-parsing.lisp
because the compiled file does not exist.  See :DOC include-book. 
Here is the sequence of books with loads of compiled or expansion files
that have led down to the printing of this message, where the load
for each is halted during the load for the next:

  /Users/benboskin/acl2/books/hacking/all.lisp


Summary
Form:  ( INCLUDE-BOOK "ccg/ccg" ...)
Rules: NIL
Time:  5.34 seconds (prove: 0.00, print: 0.00, other: 5.34)
 "/Users/benboskin/acl2/books/acl2s/ccg/ccg.lisp"
ACL2 !>>
ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "portcullis" ...): 
Unable to load compiled file for book
  /Users/benboskin/acl2/books/acl2s/portcullis.lisp
because the compiled file does not exist.  See :DOC include-book. 
Here is the sequence of books with loads of compiled or expansion files
that have led down to the printing of this message, where the load
for each is halted during the load for the next:

  /Users/benboskin/acl2/books/acl2s/base-theory.lisp


TTAG NOTE: Deferring one or more ttag notes until the current top-
level command completes.
Note (from clause-processors/equality): disabling DISJOIN, DISJOIN2,
CONJOIN and CONJOIN2.


ACL2 Observation in NON-LINEAR-ARITHMETIC:  To turn on non-linear arithmetic,
execute :

(SET-DEFAULT-HINTS '((NONLINEARP-DEFAULT-HINT STABLE-UNDER-SIMPLIFICATIONP
                                              HIST PSPV)))

or :

(SET-DEFAULT-HINTS
     '((NONLINEARP-DEFAULT-HINT++ ID
                                  STABLE-UNDER-SIMPLIFICATIONP HIST NIL)))

See the README for more about non-linear arithmetic and general information
about using this library.

Summary
Form:  ( INCLUDE-BOOK "base-theory" ...)
Rules: NIL
Warnings:  Compiled file
Time:  69.84 seconds (prove: 0.00, print: 0.01, other: 69.83)
 "/Users/benboskin/acl2/books/acl2s/base-theory.lisp"
ACL2 !>>
ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "acl2s-parameter" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/acl2s/cgen/acl2s-parameter.lisp
because the compiled file does not exist.  See :DOC include-book. 
Here is the sequence of books with loads of compiled or expansion files
that have led down to the printing of this message, where the load
for each is halted during the load for the next:

  /Users/benboskin/acl2/books/acl2s/custom.lisp
  /Users/benboskin/acl2/books/acl2s/cgen/top.lisp


Summary
Form:  ( INCLUDE-BOOK "custom" ...)
Rules: NIL
Warnings:  Compiled file
Time:  8.02 seconds (prove: 0.00, print: 0.00, other: 8.02)
 "/Users/benboskin/acl2/books/acl2s/custom.lisp"
ACL2 !>>

ACL2 !>>>(MAKE-EVENT
            (ER-PROGN
                 (ASSIGN CHECKPOINT-PROCESSORS
                         (SET-DIFFERENCE-EQ (@ CHECKPOINT-PROCESSORS)
                                            '(ELIMINATE-DESTRUCTORS-CLAUSE)))
                 (SET-CCG-PRINT-PROOFS NIL)
                 (SET-CCG-INHIBIT-OUTPUT-LST
                      '(QUERY BASICS
                              PERFORMANCE BUILD/REFINE SIZE-CHANGE))
                 (SET-GUARD-CHECKING :NOWARN)
                 (VALUE '(VALUE-TRIPLE :INVISIBLE))))

Leaving guard checking on, but changing value to :NOWARN.


Summary
Form:  ( MAKE-EVENT (ER-PROGN ...))
Rules: NIL
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
:INVISIBLE


ACL2 !>>>(SET-DEFAULT-HINTS
              '((MY-NONLINEARP-DEFAULT-HINT STABLE-UNDER-SIMPLIFICATIONP
                                            HIST PSPV)))
((MY-NONLINEARP-DEFAULT-HINT STABLE-UNDER-SIMPLIFICATIONP HIST PSPV))


ACL2 !>>>(SET-WELL-FOUNDED-RELATION L<)
L<


ACL2 !>>>(MAKE-EVENT (IF (MEMBER-EQ 'RULER-EXTENDERS-LST
                                    (GETPROP 'PUT-INDUCTION-INFO
                                             'FORMALS
                                             NIL 'CURRENT-ACL2-WORLD
                                             (W STATE)))
                         (VALUE '(SET-RULER-EXTENDERS :ALL))
                         (VALUE '(VALUE-TRIPLE :INVISIBLE))))

Summary
Form:  ( MAKE-EVENT (IF ...))
Rules: NIL
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
:ALL


ACL2 !>>>(SET-TERMINATION-METHOD :CCG)


ACL2 !>>>(TABLE ACL2-DEFAULTS-TABLE
                :TERMINATION-METHOD ':CCG)


ACL2 !>>>(TABLE ACL2-DEFAULTS-TABLE :TERMINATION-METHOD)
:CCG


ACL2 !>>>(SET-CCG-TIME-LIMIT NIL)


ACL2 !>>>(TABLE ACL2-DEFAULTS-TABLE
                :CCG-TIME-LIMIT 'NIL)


ACL2 !>>>(TABLE ACL2-DEFAULTS-TABLE :CCG-TIME-LIMIT)
NIL


ACL2 !>>>(DONT-PRINT-THANKS-MESSAGE-OVERRIDE-HINT)

Summary
Form:  ( MAKE-EVENT (QUOTE ...))
Rules: NIL
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
((EVAL-AND-TRANSLATE-HINT-EXPRESSION
      OVERRIDE-HINTS NIL
      (CONS 'NIL
            (CONS (IF (IF (NULL KEYWORD-ALIST)
                          (NULL KEYWORD-ALIST)
                          (ASSOC-KEYWORD ':NO-THANKS
                                         KEYWORD-ALIST))
                      KEYWORD-ALIST
                      (BINARY-APPEND '(:NO-THANKS T)
                                     KEYWORD-ALIST))
                  (CONS STATE 'NIL))))
 (EVAL-AND-TRANSLATE-HINT-EXPRESSION
  OVERRIDE-HINTS T
  (CONS
     'NIL
     (CONS (DEFDATA::RECORD-DEST-ELIM-SUPPORT-FN STABLE-UNDER-SIMPLIFICATIONP
                                                 CLAUSE KEYWORD-ALIST WORLD)
           (CONS STATE 'NIL)))))


ACL2 !>>>(ACL2S-DEFAULTS :SET ACL2S::TESTING-ENABLED T)


ACL2 !>>>(ACL2S::ENABLE-ACL2S-RANDOM-TESTING)


ACL2 !>>>(ADD-OVERRIDE-HINTS!
          '((LIST*
             :BACKTRACK
             (CONS
              'TEST-CHECKPOINT
              (CONS
               'ID
               (CONS
                'CLAUSE
                (CONS 'CLAUSE-LIST
                      (CONS 'PROCESSOR
                            (CONS (CONS 'QUOTE (CONS PSPV 'NIL))
                                  (CONS (CONS 'QUOTE (CONS HIST 'NIL))
                                        (CONS 'CTX (CONS 'STATE 'NIL)))))))))
             KEYWORD-ALIST)))


ACL2 !>>>(TABLE ACL2S-DEFAULTS-TABLE ':TESTING-ENABLED
                '(ACL2S::ACL2S-PARAM-INFO%
                      T
                      (MEMBER-EQ VALUE ACL2S::*TESTING-ENABLED-VALUES*)
                      ACL2S::SET-ACL2S-RANDOM-TESTING-ENABLED))
ACL2S-DEFAULTS-TABLE


ACL2 !>>>(ACL2S-DEFAULTS :SET ACL2S::NUM-TRIALS 500)


ACL2 !>>>(TABLE
           ACL2S-DEFAULTS-TABLE ':NUM-TRIALS
           '(ACL2S::ACL2S-PARAM-INFO% 500
                                      (AND (NATP VALUE) (< VALUE 1000000000))
                                      NIL))


ACL2 !>>>(VALUE-TRIPLE '500)
500

Summary
Form:  ( PROGN (MAKE-EVENT ...) ...)
Rules: NIL
Time:  0.03 seconds (prove: 0.00, print: 0.00, other: 0.03)
 500
ACL2 !>>
ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "xdoc/defxdoc-raw" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/xdoc/defxdoc-raw.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.

Include-raw Warning: compiled file failed to load; loading uncompiled /Users/benboskin/acl2/books/xdoc/defxdoc-raw-impl.lsp
Details: Couldn't load
         #P"/Users/benboskin/acl2/books/xdoc/defxdoc-raw-impl.fasl": file does
         not exist.

ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "xdoc/topics" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/xdoc/topics.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "portcullis" ...): 
Unable to load compiled file for book
  /Users/benboskin/acl2/books/system/doc/portcullis.lisp
because the compiled file does not exist.  See :DOC include-book. 
Here is the sequence of books with loads of compiled or expansion files
that have led down to the printing of this message, where the load
for each is halted during the load for the next:

  /Users/benboskin/acl2/books/system/doc/acl2-doc-wrap.lisp


ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "xdoc/display" ...):
Unable to load compiled file for book
  /Users/benboskin/acl2/books/xdoc/display.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.

Include-raw Warning: compiled file failed to load; loading uncompiled /Users/benboskin/acl2/books/std/io/read-string-raw.lsp
Details: Couldn't load
         #P"/Users/benboskin/acl2/books/std/io/read-string-raw.fasl": file does
         not exist.
Include-raw Warning: compiled file failed to load; loading uncompiled /Users/benboskin/acl2/books/xdoc/unsound-eval-raw.lsp
Details: Couldn't load
         #P"/Users/benboskin/acl2/books/xdoc/unsound-eval-raw.fasl": file does
         not exist.
Note: not introducing any PREPROC-DATA field bindings for PREPROC-DATA,
since none of its fields appear to be used.
Note: not introducing any PREPROC-DATA field bindings for PREPROC-DATA,
since none of its fields appear to be used.
Note: not introducing any PREPROC-DATA field bindings for PREPROC-DATA,
since none of its fields appear to be used.
Include-raw Warning: compiled file failed to load; loading uncompiled /Users/benboskin/acl2/books/std/strings/fast-cat-raw.lsp
Details: Couldn't load
         #P"/Users/benboskin/acl2/books/std/strings/fast-cat-raw.fasl": file
         does not exist.

ACL2 Warning [Invariant-risk] in TEST-CHECKPOINT:  Invariant-risk has
been detected for a call of function TEST-CHECKPOINT (as possibly leading
to an ill-guarded call of CGEN::UI); see :DOC invariant-risk.

ACL2S::DEFUNC -- [books]/acl2s/defunc.lisp
Parents: ACL2::ACL2-SEDAN and ACL2::MACRO-LIBRARIES.

  Function definitions with contracts [defun]


Examples

    (defunc len (a)
      :input-contract t
      :output-contract (natp (len a))
      (if (atom a)
          0
        (+ 1 (len (rest a)))))

    (defunc app (x y)
      :input-contract (and (true-listp x) (true-listp y))
      :output-contract (and (true-listp (app x y))
                            (equal (len (app x y)) (+ (len x) (len y))))
      (if (endp x)
          y
        (cons (car x) (app (cdr x) y))))

    (defunc add-digits (x)
      :input-contract (natp x)
      :output-contract (natp (add-digits x))
      :function-contract-hints (("Goal" :do-not '(acl2::generalize)))
      (if (< x 10)
          x
        (let* ((rem (rem x 10))
               (y   (/ (- x rem) 10)))
          (+ rem (add-digits y)))))

    (defunc square-list (l)
      :input-contract (nat-listp l)
      :output-contract (nat-listp (square-list l))
      (if (endp l)
          nil
        (app (list (* (car l) (car l)))
             (square-list (cdr l))))
      :verbose t
      :skip-tests t)


Purpose

  The macro defunc is an extension of acl2::defun with contracts.

  Using defunc one can specify input and output contracts (pre and
  post conditions) for a function. The following actions are
  performed when defunc is used in the default way. If any of the
  actions fail, then an informative error message is printed. If all
  actions succeed, then the function has been successfully admitted
  to ACL2s.

   1. Test the function contract, i.e., whether the output contract holds
      under the assumption that the function terminates and the input
      contract holds.
   2. Test the body contracts, i.e., whether the contracts of the
      functions appearing in the body of the defunc are violated.
   3. Construct a definition in the core ACL2 logic that respects the input
      contracts, and prove that this definition is terminating.
   4. Prove the function contract, i.e., that the input contract implies
      the output contract.
   5. Prove the body contracts, i.e., that for each occurrence of a
      function call inside the body of the function being defined,
      all of the arguments to the function call satisfy the input
      contracts of the function. In ACL2 parlance, this is guard
      verification.
   6. Replace the function definition and induction scheme with a
      definition rule and an induction scheme for the function that
      restricts definition expansion and inductions to contexts where
      the input contract is satisfied. If defunc is used in a
      disciplined way, then all contexts should satisfy this
      restriction.  Use :pcb fun-name to check the names of the above
      events.


Syntax

  The general form of defunc is:

    (defunc name (x1 x2 ...)
      [doc-string declare-form*]
      [:input-contract ic]
      [:output-contract oc]
      [:function-contract-hints hints :rule-classes ...] ;function contract hints
      [:body-contracts-hints hints]                      ;body contracts hints
      [Other :key value ...]
      body)

  The form of defunc is just like [defun] except that is allows extra
  keyword options.  Note that the keyword options can go anywhere
  between the formals (parameters) and the end of defunc macro.  The
  supported keyword options with the syntax restrictions and actions
  are noted below.

  Keyword Options

    :input-contract ic
      Required; ic is a [term].
    :output-contract oc
      Required; oc is a [term].
    :function-contract-hints hints
      Passed as :[hints] to the function contract [defthm].
    :rule-classes rcs
    :instructions is
    :otf-flg flg
      These three keyword arguments are passed directly to the function
      contract [defthm].
    :body-contracts-hints hints
      Passed as :[hints] to the body contracts [defthm].

  The following keyword options are usually set at the
  session-wide-level (see the set-defunc-* macros documented below);
  when given as keyword arguments to defunc they override the session
  defaults.

    :termination-strictp x
      When x is t (default), abort if termination failed.
      When x is nil, then if termination fails, admit the function in
      :program mode.
    :function-contract-strictp x
      When x is t (default), abort if the contract proof failed.
      When x is nil, then if the proof fails, add a dynamic contract check.
    :body-contracts-strictp x
      When x is t (default), abort if the body contracts proof failed.
      When x is nil, body contracts are checked dynamically.
    :timeout n
      Limit the time spent in defunc events to n seconds.
    :skip-tests t
      Skip the testing actions.


Debugging

  To debug a failed defunc form, you can proceed in multiple ways:
      * Submit the events shown above the failure message to replicate the
        error.
      * At the session editor (or emacs prompt), submit/evaluate :trans1
        (defunc ...) And from the output, evaluate the form that says
        (defunc-events ...).
      * Use keyword options :verbose t (or :debug t) and examine the ACL2
        output.


Subtopics

  [acl2s::Get-defunc-body-contracts-strictp]
      Get body-contracts-strictp default for defunc

  [acl2s::Get-defunc-function-contract-strictp]
      Get function-contract-strictp default for defunc

  [acl2s::Get-defunc-termination-strictp]
      Get termination-strictp default for defunc

  [acl2s::Get-defunc-timeout]
      Get timeout default for defunc

  [acl2s::Set-defunc-body-contracts-strictp]
      Set body-contracts-strictp for defunc

  [acl2s::Set-defunc-function-contract-strictp]
      Set function-contract-strictp for defunc

  [acl2s::Set-defunc-termination-strictp]
      Set termination-strictp for defunc

  [acl2s::Set-defunc-timeout]
      Set timeout (in seconds) for defunc


ACL2 !>> "ACL2S"
ACL2S !>>Bye.
 :EOF

TTAG NOTE: Printing of ttag notes has been deferred for the following
list of ttags:
  (:EV-FNCALL-W-OK :DEFDATA-ATTACH
                   :T :ACL2S-TIMEOUT
                   :XDOC :READ-STRING
                   :UNSOUND-EVAL :FAST-CAT).
To print the deferred ttag notes:  (SHOW-TTAG-NOTES).
ACL2 !>(acl2s-defaults :set verbosity-level 1)


ACL2 !>>(TABLE ACL2S-DEFAULTS-TABLE ':VERBOSITY-LEVEL
               '(ACL2S::ACL2S-PARAM-INFO% 1 (NATP VALUE)
                                          NIL))

The event ( TABLE ACL2S-DEFAULTS-TABLE ...) is redundant.  See :DOC
redundant-events.


ACL2 !>>(VALUE-TRIPLE '1)
 1
ACL2 !>(reset-prehistory t)

Summary
Form:  ( RESET-PREHISTORY T ...)
Rules: NIL
Time:  0.07 seconds (prove: 0.00, print: 0.00, other: 0.07)
 :NEW-PREHISTORY-SET
ACL2 !>(in-package "ACL2S")
 "ACL2S"
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (save-exec "acl2s" "ACL2s Mode")
[undoing binding stack and other enclosing state... done]
[saving current Lisp image into /Users/benboskin/acl2/acl2s.core:
writing 2792 bytes from the read-only space at 0x0x4000000
writing 1712 bytes from the static space at 0x0x4100000
writing 338407424 bytes from the dynamic space at 0x0x10000000
done]
bash-3.2$ ls
GNUmakefile			history-management.lisp
LICENSE				hons-raw.lisp
Makefile			hons.lisp
README.md			induct.lisp
TAGS				init.lisp
acl2-characters			installation
acl2-check.lisp			interface-raw.lisp
acl2-customization-files	ld.lisp
acl2-fns.lisp			linear-a.lisp
acl2-init.lisp			linear-b.lisp
acl2-proclaims.lisp		mcl-acl2-startup.lisp
acl2-status.txt			memoize-raw.lisp
acl2.lisp			memoize.lisp
acl2r.lisp			multi-threading-raw.lisp
acl2s				new.html
acl2s.core			non-linear.lisp
acl2s.dx86cl			openmcl-acl2-trace.lisp
akcl-acl2-trace.lisp		other-events.lisp
all-files.txt			other-processes.lisp
allegro-acl2-trace.lisp		other-releases.html
apply-constraints.lisp		parallel-raw.lisp
apply-prim.lisp			parallel.lisp
apply-raw.lisp			proof-builder-a.lisp
apply.lisp			proof-builder-b.lisp
axioms.lisp			proof-builder-pkg.lisp
basis-a.lisp			prove.lisp
basis-b.lisp			rewrite.lisp
bdd.lisp			save-gprof.lsp
bin				saved
books				saved_acl2
boot-strap-pass-2-a.lisp	saved_acl2.core
boot-strap-pass-2-b.lisp	sbcl-memory.sh
build-allegro-exe.cl		sbcl-memory.sh~
defpkgs.lisp			serialize-raw.lisp
defthm.lisp			serialize.lisp
defuns.lisp			simplify.lisp
doc				tau.lisp
doc.lisp			translate.lisp
emacs				type-set-a.lisp
futures-raw.lisp		type-set-b.lisp
graphics			workshops.html
bash-3.2$ acl2s
bash: /Users/benboskin/new-acl2s: No such file or directory
bash-3.2$ ./acl2
bash: ./acl2: No such file or directory
bash-3.2$ ./acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/acl2/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(good-bye)
bash-3.2$ cp acl2s ~/bin/acl2s
bash-3.2$ cd ~/Desktop/CAR-course/hwk6
bash-3.2$ acl2s
bash: /Users/benboskin/new-acl2s: No such file or directory
bash-3.2$ source ~/.bash_profile
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
could not open file "/Users/benboskin/bin/acl2s.core"
open: No such file or directory
bash-3.2$ source ~/.bash_profile
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(set-ignore-ok t)
 T
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun acl2s-last-result ()
  (let ((state *the-live-state*))
    (@ result)))

ACL2S-LAST-RESULT
* (defun acl2s-query (q)
  (let ((state *the-live-state*))
    (ld `((mv-let
           (erp val state)
           (trans-eval ',q 'acl2s-query state t)
           (assign result (list erp (cdr val))))))
    (acl2s-last-result)))

ACL2S-QUERY
* (load "~/quicklisp/setup.lisp")
(ql:quickload :trivia)

T
* 
debugger invoked on a LOAD-SYSTEM-DEFINITION-ERROR:
  Error while trying to load definition for system trivia from pathname
  /Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd:

     Invalid initialization argument:
       :MAILTO
     in call for class #<STANDARD-CLASS SYSTEM>.
See also:
  The ANSI Standard, Section 7.1.2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

((FLET #:LAMBDA2229 :IN ASDF::LOAD-SYSDEF) #<SB-PCL::INITARG-ERROR {25630719}>)
0] (load "~/quicklisp/setup.lisp")

T
0] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0] (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
[package cl-ppcre]................................
..................

(:CL-PPCRE)
0] (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"
[package anaphora]................................
[package anaphora-basic]..........................
[package anaphora-symbol].........................
[package alexandria.0.dev]........................
[package let-plus].....

(:LET-PLUS)
0] (setf ppcre:*allow-named-registers* t)

T
0] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 1).
  1: [RETRY                                 ] Retry EVAL of current toplevel form.
  2: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  4: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  5:                                          Give up on "trivia"
  6:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[2] (in-package :tp)


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TP" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 2).
  1:                                          Reduce debugger level (to debug
                                              level 1).
  2: [RETRY                                 ] Retry EVAL of current toplevel form.
  3: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  4:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  5: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  6:                                          Give up on "trivia"
  7:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TP")
0[3] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 3).
  1:                                          Reduce debugger level (to debug
                                              level 2).
  2:                                          Reduce debugger level (to debug
                                              level 1).
  3: [RETRY                                 ] Retry EVAL of current toplevel form.
  4: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  5:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  6: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  7:                                          Give up on "trivia"
  8:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[4] (in-package :tp)


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TP" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 4).
  1:                                          Reduce debugger level (to debug
                                              level 3).
  2:                                          Reduce debugger level (to debug
                                              level 2).
  3:                                          Reduce debugger level (to debug
                                              level 1).
  4: [RETRY                                 ] Retry EVAL of current toplevel form.
  5: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  6:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  7: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  8:                                          Give up on "trivia"
  9:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TP")
0[5] (import 'acl2::acl2s-query)

T
0[5] (defparameter *p-ops*
  '((and     :arity - :identity t   :idem t   :sink nil)
    (or      :arity - :identity nil :idem t   :sink t)
    (not     :arity 1 :identity -   :idem nil :sink -)
    (implies :arity 2 :identity -   :idem nil :sink -)
    (iff     :arity - :identity t   :idem nil :sink -)
    (if      :arity 3 :identity -   :idem nil :sink -)))

*P-OPS*
0[5] (defparameter *p-funs* (mapcar #'car *p-ops*))

*P-FUNS*
0[5] (defun in (a x)
  (member a x :test #'equal))

IN
0[5] (defmacro len (l) `(length ,l))

LEN
0[5] (defun p-funp (x)
  (in x *p-funs*))

P-FUNP
0[5] (defun get-alist (k l)
  (cdr (assoc k l :test #'equal)))

GET-ALIST
0[5] (defun get-key (k l)
  (cadr (member k l :test #'equal)))

GET-KEY
0[5] (defun remove-dups (l)
  (remove-duplicates l :test #'equal))

REMOVE-DUPS
0[5] (defmacro == (x y) `(equal ,x ,y))

==
0[5] (defmacro != (x y) `(not (equal ,x ,y)))

!=
0[5] (defun pfun-argsp (pop args)
  (and (in pop *p-funs*)
       (let ((arity (get-key :arity (get-alist pop *p-ops*))))
         (and (or (eql arity '-)
                  (= (len args) arity))
              (every #'p-formulap args)))))

PFUN-ARGSP
0[5] (defun pfun-formulap (f)
  (and (consp f)
       (pfun-argsp (car f) (cdr f))))

PFUN-FORMULAP
0[5] (defun p-formulap (f)
  (match f
    ((type boolean) t)
    ((type symbol) t)
    ((list* pop args)
     (if (p-funp pop)
         (pfun-argsp pop args)
       t))
    (_ nil)))
; in: DEFUN P-FORMULAP
;     ((TYPE BOOLEAN) T)
; 
; caught ERROR:
;   illegal function call

;     ((TYPE SYMBOL) T)
; 
; caught ERROR:
;   illegal function call

;     ((LIST* POP ASDF0::ARGS)
;      (IF (ASDF0::P-FUNP POP)
;          (ASDF0::PFUN-ARGSP POP ASDF0::ARGS)
;          T))
; 
; caught ERROR:
;   illegal function call
; 
; compilation unit finished
;   caught 3 ERROR conditions
P-FORMULAP
0[5] (assert (p-formulap '(and)))


debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR:
  Execution of a form compiled with errors.
Form:
  ((TYPE BOOLEAN) T)
Compile-time error:
  illegal function call

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 5).
  1:                                          Reduce debugger level (to debug
                                              level 4).
  2:                                          Reduce debugger level (to debug
                                              level 3).
  3:                                          Reduce debugger level (to debug
                                              level 2).
  4:                                          Reduce debugger level (to debug
                                              level 1).
  5: [RETRY                                 ] Retry EVAL of current toplevel form.
  6: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  7:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  8: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  9:                                          Give up on "trivia"
 10:                                          Exit debugger, returning to top
                                              level.

(P-FORMULAP #<unavailable argument>)
0[6] (assert (p-formulap '(and x y z)))


debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR:
  Execution of a form compiled with errors.
Form:
  ((TYPE BOOLEAN) T)
Compile-time error:
  illegal function call

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 6).
  1:                                          Reduce debugger level (to debug
                                              level 5).
  2:                                          Reduce debugger level (to debug
                                              level 4).
  3:                                          Reduce debugger level (to debug
                                              level 3).
  4:                                          Reduce debugger level (to debug
                                              level 2).
  5:                                          Reduce debugger level (to debug
                                              level 1).
  6: [RETRY                                 ] Retry EVAL of current toplevel form.
  7: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  8:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  9: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
 10:                                          Give up on "trivia"
 11:                                          Exit debugger, returning to top
                                              level.

(P-FORMULAP #<unavailable argument>)
0[7] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 7).
  1:                                          Reduce debugger level (to debug
                                              level 6).
  2:                                          Reduce debugger level (to debug
                                              level 5).
  3:                                          Reduce debugger level (to debug
                                              level 4).
  4:                                          Reduce debugger level (to debug
                                              level 3).
  5:                                          Reduce debugger level (to debug
                                              level 2).
  6:                                          Reduce debugger level (to debug
                                              level 1).
  7: [RETRY                                 ] Retry EVAL of current toplevel form.
  8: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  9:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
 10: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
 11:                                          Give up on "trivia"
 12:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[8] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0[8] (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"


(:CL-PPCRE)
0[8] (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"


(:LET-PLUS)
0[8] (setf ppcre:*allow-named-registers* t)

T
0[8] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 8).
  1:                                          Reduce debugger level (to debug
                                              level 7).
  2:                                          Reduce debugger level (to debug
                                              level 6).
  3:                                          Reduce debugger level (to debug
                                              level 5).
  4:                                          Reduce debugger level (to debug
                                              level 4).
  5:                                          Reduce debugger level (to debug
                                              level 3).
  6:                                          Reduce debugger level (to debug
                                              level 2).
  7:                                          Reduce debugger level (to debug
                                              level 1).
  8: [RETRY                                 ] Retry EVAL of current toplevel form.
  9: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
 10:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
 11: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
 12:                                          Give up on "trivia"
 13:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[9] (setf ppcre:*allow-named-registers* t)

T
0[9] (load "~/quicklisp/setup.lisp")

T
0[9] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0[9] (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"


(:CL-PPCRE)
0[9] (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"


(:LET-PLUS)
0[9] (setf ppcre:*allow-named-registers* t)

T
0[9] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 9).
  1:                                          Reduce debugger level (to debug
                                              level 8).
  2:                                          Reduce debugger level (to debug
                                              level 7).
  3:                                          Reduce debugger level (to debug
                                              level 6).
  4:                                          Reduce debugger level (to debug
                                              level 5).
  5:                                          Reduce debugger level (to debug
                                              level 4).
  6:                                          Reduce debugger level (to debug
                                              level 3).
  7:                                          Reduce debugger level (to debug
                                              level 2).
  8:                                          Reduce debugger level (to debug
                                              level 1).
  9: [RETRY                                 ] Retry EVAL of current toplevel form.
 10: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
 11:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
 12: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
 13:                                          Give up on "trivia"
 14:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[10] (sb-ext:exit)
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(set-ignore-ok t)
 T
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun acl2s-last-result ()
  (let ((state *the-live-state*))
    (@ result)))

ACL2S-LAST-RESULT
* (defun acl2s-query (q)
  (let ((state *the-live-state*))
    (ld `((mv-let
           (erp val state)
           (trans-eval ',q 'acl2s-query state t)
           (assign result (list erp (cdr val))))))
    (acl2s-last-result)))

ACL2S-QUERY
* (load "~/quicklisp/setup.lisp")

T
* (ql:quickload :trivia)

debugger invoked on a LOAD-SYSTEM-DEFINITION-ERROR:
  Error while trying to load definition for system trivia from pathname
  /Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd:

     Invalid initialization argument:
       :MAILTO
     in call for class #<STANDARD-CLASS SYSTEM>.
See also:
  The ANSI Standard, Section 7.1.2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

((FLET #:LAMBDA2229 :IN ASDF::LOAD-SYSDEF) #<SB-PCL::INITARG-ERROR {25630719}>)
0] (sbc-ext:exit)


debugger invoked on a SB-INT:SIMPLE-READER-PACKAGE-ERROR:
  Package SBC-EXT does not exist.

    Stream: #<SYNONYM-STREAM :SYMBOL *TERMINAL-IO* {10424241}>

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

(SB-IMPL::READ-TOKEN #<SYNONYM-STREAM :SYMBOL *TERMINAL-IO* {10424241}> #\s)
0[2] To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* bash-3.2$ acl2
bash: acl2: command not found
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(good-bye)
bash-3.2$ pwd
/Users/benboskin/Desktop/CAR-course/hwk6
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(set-ignore-ok t)
 T
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun acl2s-last-result ()
  (let ((state *the-live-state*))
    (@ result)))

ACL2S-LAST-RESULT
* (defun acl2s-query (q)
  (let ((state *the-live-state*))
    (ld `((mv-let
           (erp val state)
           (trans-eval ',q 'acl2s-query state t)
           (assign result (list erp (cdr val))))))
    (acl2s-last-result)))

ACL2S-QUERY
* (load "~/quicklisp/setup.lisp")

T
* (ql:quickload :trivia)

debugger invoked on a LOAD-SYSTEM-DEFINITION-ERROR:
  Error while trying to load definition for system trivia from pathname
  /Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd:

     Invalid initialization argument:
       :MAILTO
     in call for class #<STANDARD-CLASS SYSTEM>.
See also:
  The ANSI Standard, Section 7.1.2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

((FLET #:LAMBDA2229 :IN ASDF::LOAD-SYSDEF) #<SB-PCL::INITARG-ERROR {25630719}>)
0] 0
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
(:CL-PPCRE)
* (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"

(:LET-PLUS)
* (setf ppcre:*allow-named-registers* t)

T
* (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))

debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[2] 
0] * bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(set-ignore-ok t)
 T
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun acl2s-last-result ()
  (let ((state *the-live-state*))
    (@ result)))

ACL2S-LAST-RESULT
* (defun acl2s-query (q)
  (let ((state *the-live-state*))
    (ld `((mv-let
           (erp val state)
           (trans-eval ',q 'acl2s-query state t)
           (assign result (list erp (cdr val))))))
    (acl2s-last-result)))

ACL2S-QUERY
* (load "~/quicklisp/setup.lisp")

T
* (ql:quickload :trivia)

debugger invoked on a LOAD-SYSTEM-DEFINITION-ERROR:
  Error while trying to load definition for system trivia from pathname
  /Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd:

     Invalid initialization argument:
       :MAILTO
     in call for class #<STANDARD-CLASS SYSTEM>.
See also:
  The ANSI Standard, Section 7.1.2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

((FLET #:LAMBDA2229 :IN ASDF::LOAD-SYSDEF) #<SB-PCL::INITARG-ERROR {25630719}>)
0] 3
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
(:CL-PPCRE)
* (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"

(:LET-PLUS)
* (setf ppcre:*allow-named-registers* t)

T
* (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))

debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0] (load "~/quicklisp/setup.lisp")

T
0] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0] (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"


(:CL-PPCRE)
0] (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"


(:LET-PLUS)
0] (setf ppcre:*allow-named-registers* t)

T
0] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[2] 1
* (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"

(:LET-PLUS)
* (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* (load "~/quicklisp/setup.lisp")

T
* (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"

(:CL-PPCRE)
* (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"

(:LET-PLUS)
* (setf ppcre:*allow-named-registers* t)

T
* (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))

debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0] (in-package :tp)


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TP" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TP")
0[2] (import 'acl2::acl2s-query)

T
0[2] (defparameter *p-ops*
  '((and     :arity - :identity t   :idem t   :sink nil)
    (or      :arity - :identity nil :idem t   :sink t)
    (not     :arity 1 :identity -   :idem nil :sink -)
    (implies :arity 2 :identity -   :idem nil :sink -)
    (iff     :arity - :identity t   :idem nil :sink -)
    (if      :arity 3 :identity -   :idem nil :sink -)))

*P-OPS*
0[2] (defparameter *p-funs* (mapcar #'car *p-ops*))

*P-FUNS*
0[2] (defun in (a x)
  (member a x :test #'equal))

IN
0[2] (defmacro len (l) `(length ,l))

STYLE-WARNING:
   LEN is being redefined as a macro when it was previously defined to be a function.
STYLE-WARNING: redefining ACL2::LEN in DEFMACRO
LEN
0[2] (defun p-funp (x)
  (in x *p-funs*))

P-FUNP
0[2] (defun get-alist (k l)
  (cdr (assoc k l :test #'equal)))

GET-ALIST
0[2] (defun get-key (k l)
  (cadr (member k l :test #'equal)))

GET-KEY
0[2] (defun remove-dups (l)
  (remove-duplicates l :test #'equal))

REMOVE-DUPS
0[2] (defmacro == (x y) `(equal ,x ,y))

==
0[2] (defmacro != (x y) `(not (equal ,x ,y)))

!=
0[2] (defun pfun-argsp (pop args)
  (and (in pop *p-funs*)
       (let ((arity (get-key :arity (get-alist pop *p-ops*))))
         (and (or (eql arity '-)
                  (= (len args) arity))
              (every #'p-formulap args)))))

PFUN-ARGSP
0[2] (defun pfun-formulap (f)
  (and (consp f)
       (pfun-argsp (car f) (cdr f))))

PFUN-FORMULAP
0[2] (defun p-formulap (f)
  (match f
    ((type boolean) t)
    ((type symbol) t)
    ((list* pop args)
     (if (p-funp pop)
         (pfun-argsp pop args)
       t))
    (_ nil)))
; in: DEFUN P-FORMULAP
;     (ACL2::MATCH ACL2::F ((TYPE BOOLEAN) T) ((TYPE SYMBOL) T)
;                  ((LIST* POP ACL2::ARGS)
;                   (IF (ACL2::P-FUNP POP)
;                       (ACL2::PFUN-ARGSP POP ACL2::ARGS)
;                       T))
;                  (ACL2::_ NIL))
; 
; caught ERROR:
;   during macroexpansion of (MATCH F (# T) ...). Use *BREAK-ON-SIGNALS* to
;   intercept.
;   
;    error while parsing arguments to DEFMACRO MATCH:
;      invalid number of elements in
;        (F ((TYPE BOOLEAN) T) ((TYPE SYMBOL) T)
;         ((LIST* POP ARGS)
;          (IF #
;              #
;              T))
;         (_ NIL))
;      to satisfy lambda list
;        (X PAT):
;      exactly 2 expected, but 5 found
; 
; compilation unit finished
;   caught 1 ERROR condition
P-FORMULAP
0[2] (assert (p-formulap '(and)))


debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR:
  Execution of a form compiled with errors.
Form:
  (MATCH F ((TYPE BOOLEAN) T) ((TYPE SYMBOL) T)
       ((LIST* POP ARGS)
        (IF (P-FUNP POP)
            (PFUN-ARGSP POP ARGS)
            T))
       (_ NIL))
Compile-time error:
  during macroexpansion of (MATCH F (# T) ...). Use *BREAK-ON-SIGNALS* to
intercept.

 error while parsing arguments to DEFMACRO MATCH:
   invalid number of elements in
     (F ((TYPE BOOLEAN) T) ((TYPE SYMBOL) T)
      ((LIST* POP ARGS)
       (IF #
           #
           T))
      (_ NIL))
   to satisfy lambda list
     (X PAT):
   exactly 2 expected, but 5 found

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 2).
  1:         Reduce debugger level (to debug level 1).
  2:         Exit debugger, returning to top level.

(P-FORMULAP #<unavailable argument>)
0[3] 
0[2] 
0] 
* bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/Desktop/CAR-course/hwk6/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(set-ignore-ok t)
 T
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun acl2s-last-result ()
  (let ((state *the-live-state*))
    (@ result)))

ACL2S-LAST-RESULT
* (defun acl2s-query (q)
  (let ((state *the-live-state*))
    (ld `((mv-let
           (erp val state)
           (trans-eval ',q 'acl2s-query state t)
           (assign result (list erp (cdr val))))))
    (acl2s-last-result)))

ACL2S-QUERY
* (load "~/quicklisp/setup.lisp")

T
* (ql:quickload :trivia)

debugger invoked on a LOAD-SYSTEM-DEFINITION-ERROR:
  Error while trying to load definition for system trivia from pathname
  /Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd:

     Invalid initialization argument:
       :MAILTO
     in call for class #<STANDARD-CLASS SYSTEM>.
See also:
  The ANSI Standard, Section 7.1.2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [RETRY                                 ] Retry EVAL of current toplevel form.
  1: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  2: [ABORT                                 ] Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  4:                                          Give up on "trivia"
  5:                                          Exit debugger, returning to top
                                              level.

((FLET #:LAMBDA2229 :IN ASDF::LOAD-SYSDEF) #<SB-PCL::INITARG-ERROR {25630719}>)
0] (ql:quickload :trivia)
To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"


(:TRIVIA)
0] (ql:quickload :cl-ppcre)
To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..

(:CL-PPCRE)
0] (ql:quickload :let-plus)
To load "let-plus":
  Load 1 ASDF system:
    let-plus
; Loading "let-plus"


(:LET-PLUS)
0] (setf ppcre:*allow-named-registers* t)

T
0] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 1).
  1: [RETRY                                 ] Retry EVAL of current toplevel form.
  2: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  3:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  4: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  5:                                          Give up on "trivia"
  6:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[2] (defpackage :tp (:use :cl :trivia :ppcre :let-plus :acl2 :acl2s))


debugger invoked on a SB-KERNEL:SIMPLE-PACKAGE-ERROR:
  The name "TRIVIA" does not designate any package.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT                                 ] Reduce debugger level (to debug
                                              level 2).
  1:                                          Reduce debugger level (to debug
                                              level 1).
  2: [RETRY                                 ] Retry EVAL of current toplevel form.
  3: [CONTINUE                              ] Ignore error and continue loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  4:                                          Abort loading file "/Users/benboskin/quicklisp/dists/quicklisp/software/trivia-20181018-git/trivia.asd".
  5: [REINITIALIZE-SOURCE-REGISTRY-AND-RETRY] Retry finding system trivia after
                                              reinitializing the
                                              source-registry.
  6:                                          Give up on "trivia"
  7:                                          Exit debugger, returning to top
                                              level.

(SB-INT:%FIND-PACKAGE-OR-LOSE "TRIVIA")
0[3] 
0[2] 
0] To load "trivia":
  Load 1 ASDF system:
    trivia
; Loading "trivia"

(:TRIVIA)
* bash-3.2$ pwd
/Users/benboskin/Desktop/CAR-course/hwk6
bash-3.2$ cd ..
bash-3.2$ cd ..
bash-3.2$ cd inv-gen-game-chi18-copy/src/backend/
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd 
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(in-package "ACL2S")
 "ACL2S"
ACL2S !>(include-book "centaur/misc/outer-local" :dir :system)

The event ( INCLUDE-BOOK "centaur/misc/outer-local" ...) is redundant.
See :DOC redundant-events.

Summary
Form:  ( INCLUDE-BOOK "centaur/misc/outer-local" ...)
Rules: NIL
Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
 :REDUNDANT
ACL2S !>(include-book "misc/eval" :dir :system)

The event ( INCLUDE-BOOK "misc/eval" ...) is redundant.  See :DOC redundant-
events.

Summary
Form:  ( INCLUDE-BOOK "misc/eval" ...)
Rules: NIL
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
 :REDUNDANT
ACL2S !>(include-book "redef")

ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "redef" ...):  Unable
to load compiled file for book
  /Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.lisp
because the compiled file does not exist.  See :DOC include-book. 
No load was in progress for any parent book.


ACL2 Warning [Uncertified] in ( INCLUDE-BOOK "redef" ...):  
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.lisp"
was apparently certified with ACL2 Version 8.0.  The inclusion of this
book in the current ACL2 may render this ACL2 session unsound!  We
recommend you recertify the book with the current version, ACL2 Version
8.1.  See :DOC version.  No compiled file will be loaded with this
book.


ACL2 Warning [Uncertified] in ( INCLUDE-BOOK "redef" ...):  After evaluating
the portcullis commands for the book 
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.lisp":
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/display\
.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
         (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")
         (:XDOC "/Users/benboskin/acl2/books/xdoc/defxdoc-raw.lisp")))
and book hash ((:BOOK-LENGTH . 35801) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "display" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")
      (:XDOC "/Users/benboskin/acl2/books/xdoc/defxdoc-raw.lisp")
      (:FAST-CAT "/Users/benboskin/acl2/books/std/strings/fast-cat.lisp")))
and book-hash ((:BOOK-LENGTH . 37019) (:BOOK-WRITE-DATE . 3748361594)),
AND NOTE that file "display.cert" changed after "display" was included,
so you should probably undo back through the command that included
"display" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/word-
wrap.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5036) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "word-wrap" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5105) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/spellch\
eck.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 15346) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "spellcheck" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 15346) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/prepare\
-topic.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book hash ((:BOOK-LENGTH . 14156) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "prepare-topic" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book-hash ((:BOOK-LENGTH . 13940) (:BOOK-WRITE-DATE . 3748361594)),
AND NOTE that file "prepare-topic.cert" changed after "prepare-topic"
was included, so you should probably undo back through the command
that included "prepare-topic" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/parse-
xml.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 16616) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "parse-xml" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 16616) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/preproc\
ess.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book hash ((:BOOK-LENGTH . 57827) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "preprocess" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book-hash ((:BOOK-LENGTH . 64738) (:BOOK-WRITE-DATE . 3748361594)),
AND NOTE that file "preprocess.cert" changed after "preprocess" was
included, so you should probably undo back through the command that
included "preprocess" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/xdoc-
error.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5237) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "xdoc-error" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5237) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/verbose\
p.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1762) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "verbosep" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1762) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/unsound\
-eval.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book hash ((:BOOK-LENGTH . 3980) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "unsound-eval" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:UNSOUND-EVAL "/Users/benboskin/acl2/books/xdoc/unsound-eval.lisp")))
and book-hash ((:BOOK-LENGTH . 3980) (:BOOK-WRITE-DATE . 3748361594)),
AND NOTE that file "unsound-eval.cert" changed after "unsound-eval"
was included, so you should probably undo back through the command
that included "unsound-eval" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/std/io/read-
string.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")))
and book hash ((:BOOK-LENGTH . 3251) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "read-string" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:READ-STRING "/Users/benboskin/acl2/books/std/io/read-string.lisp")))
and book-hash ((:BOOK-LENGTH . 3251) (:BOOK-WRITE-DATE . 3748361592)),
AND NOTE that file "read-string.cert" changed after "read-string" was
included, so you should probably undo back through the command that
included "read-string" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/autolin\
k.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 16703) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "autolink" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 16703) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/names.l\
isp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7993) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "names" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7993) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/fmt-
to-str.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2174) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fmt-to-str" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2174) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/str.lis\
p" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10276) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "str" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10276) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/strings/\
pretty-program.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3360) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "pretty-program" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3360) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/strings/\
defs-program.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3679) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defs-program" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3679) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/osets/to\
p.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 35723) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 35723) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/osets/co\
mputed-hints.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 15424) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "computed-hints" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 16761) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/osets/in\
stance.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 24021) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "instance" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 24021) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/system/doc/a\
cl2-doc-wrap.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5242) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "acl2-doc-wrap" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5242) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/geto\
pt/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1431) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1431) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/satl\
ink/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1506) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1506) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/brid\
ge/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1657) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1657) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/system/doc/p\
ortcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1448) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1448) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/build/portcu\
llis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 21) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 21) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/topics.\
lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 63973) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "topics" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 63981) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/oslib/portcu\
llis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1691) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1691) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/defxdoc\
-raw.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:XDOC "/Users/benboskin/acl2/books/xdoc/defxdoc-raw.lisp")))
and book hash ((:BOOK-LENGTH . 1989) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defxdoc-raw" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:XDOC "/Users/benboskin/acl2/books/xdoc/defxdoc-raw.lisp")))
and book-hash ((:BOOK-LENGTH . 1989) (:BOOK-WRITE-DATE . 3748361594)),
AND NOTE that file "defxdoc-raw.cert" changed after "defxdoc-raw" was
included, so you should probably undo back through the command that
included "defxdoc-raw" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/tools/includ\
e-raw.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 13614) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "include-raw" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 13744) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/custom\
.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book hash ((:BOOK-LENGTH . 10375) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "custom" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book-hash ((:BOOK-LENGTH . 10375) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "custom.cert" changed after "custom" was included,
so you should probably undo back through the command that included
"custom" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defunc\
.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book hash ((:BOOK-LENGTH . 46512) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defunc" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book-hash ((:BOOK-LENGTH . 46516) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "defunc.cert" changed after "defunc" was included,
so you should probably undo back through the command that included
"defunc" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/t\
op.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book hash ((:BOOK-LENGTH . 17503) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp"
      "/Users/benboskin/acl2/books/acl2s/cgen/top.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book-hash ((:BOOK-LENGTH . 17463) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "top.cert" changed after "top" was included, so
you should probably undo back through the command that included "top"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/c\
gen-rules.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 20802) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "cgen-rules" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 20802) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "cgen-rules.cert" changed after "cgen-rules" was
included, so you should probably undo back through the command that
included "cgen-rules" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/f\
ixers-greedy.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book hash ((:BOOK-LENGTH . 36195) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fixers-greedy" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")
  (:ACL2S-TIMEOUT "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/cgen/fixers-greedy.lisp")))
and book-hash ((:BOOK-LENGTH . 36195) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "fixers-greedy.cert" changed after "fixers-greedy"
was included, so you should probably undo back through the command
that included "fixers-greedy" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/p\
rove-cgen.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 38529) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "prove-cgen" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 38529) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "prove-cgen.cert" changed after "prove-cgen" was
included, so you should probably undo back through the command that
included "prove-cgen" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/misc/evalabl\
e-printing.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4374) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "evalable-printing" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4374) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/c\
allback.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 34530) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "callback" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 34530) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "callback.cert" changed after "callback" was included,
so you should probably undo back through the command that included
"callback" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/c\
gen-search.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:ACL2S-TIMEOUT
        "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 15762) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "cgen-search" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:ACL2S-TIMEOUT
        "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 15762) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "cgen-search.cert" changed after "cgen-search" was
included, so you should probably undo back through the command that
included "cgen-search" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/i\
ncremental-search.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:ACL2S-TIMEOUT
        "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 18479) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "incremental-search" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
        "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:ACL2S-TIMEOUT
        "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 18479) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "incremental-search.cert" changed after 
"incremental-search" was included, so you should probably undo back
through the command that included "incremental-search" (or, if you
are using an image created by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/s\
imple-search.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 41766) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "simple-search" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")
    (:ACL2S-TIMEOUT
         "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 41766) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "simple-search.cert" changed after "simple-search"
was included, so you should probably undo back through the command
that included "simple-search" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/s\
elect.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 18856) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "select" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 18856) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "select.cert" changed after "select" was included,
so you should probably undo back through the command that included
"select" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/w\
ith-timeout.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:ACL2S-TIMEOUT
              "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book hash ((:BOOK-LENGTH . 2879) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "with-timeout" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:ACL2S-TIMEOUT
              "/Users/benboskin/acl2/books/acl2s/cgen/with-timeout.lisp")))
and book-hash ((:BOOK-LENGTH . 2879) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "with-timeout.cert" changed after "with-timeout"
was included, so you should probably undo back through the command
that included "with-timeout" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/b\
uild-enumcalls.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 29336) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "build-enumcalls" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
         "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 29336) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "build-enumcalls.cert" changed after "build-enumcalls"
was included, so you should probably undo back through the command
that included "build-enumcalls" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/i\
nfer-enum-shape.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp")))
and book hash ((:BOOK-LENGTH . 31196) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "infer-enum-shape" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp")))
and book-hash ((:BOOK-LENGTH . 31196) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "infer-enum-shape.cert" changed after "infer-enum-shape"
was included, so you should probably undo back through the command
that included "infer-enum-shape" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/misc/bash.li\
sp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 14878) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "bash" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 15185) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/p\
ropagate.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 12311) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "propagate" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 12311) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "propagate.cert" changed after "propagate" was included,
so you should probably undo back through the command that included
"propagate" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/s\
imple-graph-array.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 14597) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "simple-graph-array" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 14597) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "simple-graph-array.cert" changed after 
"simple-graph-array" was included, so you should probably undo back
through the command that included "simple-graph-array" (or, if you
are using an image created by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/t\
ype.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
           "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 27487) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "type" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/cgen/type.lisp"
           "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp"
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 27487) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "type.cert" changed after "type" was included, so
you should probably undo back through the command that included "type"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/c\
gen-state.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 18378) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "cgen-state" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:EV-FNCALL-W-OK
              "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
              "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 18378) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "cgen-state.cert" changed after "cgen-state" was
included, so you should probably undo back through the command that
included "cgen-state" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/b\
asis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 25393) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "basis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 25393) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/u\
tilities.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book hash ((:BOOK-LENGTH . 37635) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "utilities" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK "/Users/benboskin/acl2/books/acl2s/cgen/utilities.lisp")))
and book-hash ((:BOOK-LENGTH . 37635) (:BOOK-WRITE-DATE . 3749991471)),
AND NOTE that file "utilities.cert" changed after "utilities" was included,
so you should probably undo back through the command that included
"utilities" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/cgen/a\
cl2s-parameter.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 19595) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "acl2s-parameter" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 19595) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/base-
theory.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book hash ((:BOOK-LENGTH . 4345) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "base-theory" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book-hash ((:BOOK-LENGTH . 5692) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "base-theory.cert" changed after "base-theory" was
included, so you should probably undo back through the command that
included "base-theory" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/top.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3490) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3490) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/top.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 677) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 677) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/more-floor-mod.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 26302) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "more-floor-mod" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 26302) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/forcing-types.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3286) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "forcing-types" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3286) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/if-normalization.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1635) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "if-normalization" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1635) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/floor-mod-basic.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 33425) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "floor-mod-basic" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 33425) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/floor-mod.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 67797) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "floor-mod" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 67797) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/mod-expt-fast.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2448) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "mod-expt-fast" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2448) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/truncate-rem.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2787) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "truncate-rem" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2787) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/floor-mod/logand.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 57468) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "logand" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 57468) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/top.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 14599) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 14599) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/banner.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1359) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "banner" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1359) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/forcing-types.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3541) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "forcing-types" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3541) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/if-normalization.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2533) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "if-normalization" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2533) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/simple-equalities-and-inequalities.lisp" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 43958) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "simple-equalities-and-inequalities"
with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 43958) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/types.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3498) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "types" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3498) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/arithmetic-theory.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 27878) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "arithmetic-theory" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 27878) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/remove-weak-inequalities.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3661) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "remove-weak-inequalities" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3661) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/collect.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 20726) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "collect" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 20726) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/expt.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 30311) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "expt" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 30311) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/basic.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5495) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "basic" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5495) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/integerp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 167864) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "integerp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 167864) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/integerp-meta.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 32653) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "integerp-meta" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 32653) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/natp-posp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4860) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "natp-posp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4860) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/numerator-and-denominator.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6040) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "numerator-and-denominator" with
certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6040) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/mini-theories.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2352) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "mini-theories" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2352) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/simplify.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 29340) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "simplify" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 29340) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/normalize.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 24783) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "normalize" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 24783) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/common.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 44712) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "common" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 44712) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/building-blocks.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 41851) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "building-blocks" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 41851) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/default-hint.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 13739) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "default-hint" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 13739) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/dynamic-e-d.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4102) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "dynamic-e-d" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4102) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/distributivity.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1384) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "distributivity" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1384) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/arithmetic-
5/lib/basic-ops/we-are-here.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 525) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "we-are-here" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 525) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/lex\
icographic-ordering-without-arithmetic.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 211) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of 
"lexicographic-ordering-without-arithmetic" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 211) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/lex\
icographic-book.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5977) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "lexicographic-book" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5977) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inals-without-arithmetic.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 80) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinals-without-arithmetic" with
certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 80) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/lim\
its.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1746) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "limits" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1746) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-exponentiation.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 30914) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-exponentiation" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 30914) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-multiplication.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 15484) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-multiplication" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 15484) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-addition.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 13068) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-addition" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 13068) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-basic-thms.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10202) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-basic-thms" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10202) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-total-order.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5819) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-total-order" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5819) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ordinals/ord\
inal-definitions.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8996) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ordinal-definitions" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8996) (:BOOK-WRITE-DATE . 3748361590)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/t\
op.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7428) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7428) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
list-defuns.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8411) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alist-defuns" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8411) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/p\
airlis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3438) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "pairlis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3438) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/s\
trip-cdrs.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5825) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "strip-cdrs" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5825) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/s\
trip-cars.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5450) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "strip-cars" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5450) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/h\
ons-rassoc-equal.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5503) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "hons-rassoc-equal" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5503) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/f\
ast-alist-clean.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7439) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fast-alist-clean" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7439) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/h\
ons-assoc-equal.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4480) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "hons-assoc-equal" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4480) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/h\
ons-remove-assoc.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3885) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "hons-remove-assoc" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3885) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/f\
al-extract-vals.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4550) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fal-extract-vals" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4550) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/f\
al-extract.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5095) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fal-extract" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5095) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/f\
al-find-any.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4475) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fal-find-any" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4475) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/f\
al-all-boundp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5085) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fal-all-boundp" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5085) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/w\
orth-hashing.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1571) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "worth-hashing" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1571) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
lists-compatible.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 12138) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alists-compatible" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 12138) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
list-equiv.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17158) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alist-equiv" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17158) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
ppend-alist-vals.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6101) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "append-alist-vals" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6101) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
ppend-alist-keys.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6099) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "append-alist-keys" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6099) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
list-fix.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2462) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alist-fix" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2462) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
list-vals.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4110) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alist-vals" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4110) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
list-keys.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5617) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alist-keys" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5617) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/alists/a\
listp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4237) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alistp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4237) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/to\
p.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7578) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7578) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/up\
date-nth.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10303) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "update-nth" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10303) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/tr\
ue-listp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2433) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "true-listp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2433) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/ta\
ke.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7808) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "take" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7808) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/su\
ffixp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2815) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "suffixp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2815) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/su\
bseq.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3866) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "subseq" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3866) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/su\
blistp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8076) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "sublistp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8076) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/se\
t-difference.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2476) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "set-difference" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2476) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/se\
ts.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 23968) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "sets" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 23968) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/rc\
ons.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3833) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "rcons" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3833) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
verse.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4962) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "reverse" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4962) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
vappend.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5410) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "revappend" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5410) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
size-list.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3460) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "resize-list" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3460) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
peat.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8257) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "repeat" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8257) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
move-duplicates.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10635) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "remove-duplicates" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10635) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
move.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4739) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "remove" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4739) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/pr\
efixp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4818) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "prefixp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4818) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/nt\
hcdr.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7622) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "nthcdr" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7622) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/nt\
h.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 13238) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "nth" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 13238) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/no\
-duplicatesp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 11106) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "no-duplicatesp" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 11106) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/na\
ts-equiv.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4066) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "nats-equiv" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4066) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/mf\
c-utils.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5387) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "mfc-utils" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5387) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/le\
n.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3101) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "len" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3101) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/la\
st.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3502) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "last" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3502) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/in\
tersectp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2564) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "intersectp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2564) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/in\
dex-of.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5461) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "index-of" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6075) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/in\
tersection.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4328) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "intersection" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4328) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/fi\
nal-cdr.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3639) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "final-cdr" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3639) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/du\
plicity.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5868) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "duplicity" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5868) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/fl\
atten.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3868) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "flatten" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3868) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/re\
v.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6266) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "rev" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6266) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/eq\
uiv.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6332) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "equiv" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6332) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/bi\
ts-equiv.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 3741) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "bits-equiv" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 3741) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/misc\
/universal-equiv.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 9116) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "universal-equiv" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 9116) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/clause-
processors/equality.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 14038) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "equality" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 14038) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/basic/ar\
ith-equiv-defs.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5782) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "arith-equiv-defs" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5782) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/fty/\
basetypes.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17870) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "basetypes" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17870) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/fty/\
fixtype.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17155) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fixtype" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17155) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/ihs/basic-
definitions.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 32861) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "basic-definitions" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 32861) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/basic/de\
fs.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 13068) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defs" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 14465) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/al\
l-equalp.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4509) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "all-equalp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4509) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/def\
ine.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 85111) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "define" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 86578) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/kestrel/util\
ities/make-termination-theorem.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8547) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "make-termination-theorem" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8547) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/kestrel/util\
ities/defmacroq.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2831) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defmacroq" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2831) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/tools/mv-
nth.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 2568) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "mv-nth" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 2568) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/fmt-
to-str-orig.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4713) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "fmt-to-str-orig" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4713) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/ret\
urnspecs.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 25753) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "returnspecs" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 26622) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/for\
mals.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 21512) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "formals" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 21512) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/loo\
k-up.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8288) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "look-up" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8288) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/li\
st-defuns.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 11814) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "list-defuns" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 11825) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/ap\
pend.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5519) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "append" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5519) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/li\
st-fix.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 7522) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "list-fix" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6206) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/lists/ab\
stract.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 30735) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "abstract" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 34438) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/top.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book hash ((:BOOK-LENGTH . 16070) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
       "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
       "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp")
  (:DEFDATA-ATTACH "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp"
                   "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp")
  (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book-hash ((:BOOK-LENGTH . 16070) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "top.cert" changed after "top" was included, so
you should probably undo back through the command that included "top"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/sig.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book hash ((:BOOK-LENGTH . 32807) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "sig" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:T "/Users/benboskin/acl2/books/acl2s/defdata/sig.lisp")))
and book-hash ((:BOOK-LENGTH . 32807) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "sig.cert" changed after "sig" was included, so
you should probably undo back through the command that included "sig"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/base.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:DEFDATA-ATTACH
        "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")))
and book hash ((:BOOK-LENGTH . 55215) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "base" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:DEFDATA-ATTACH
        "/Users/benboskin/acl2/books/acl2s/defdata/base.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")))
and book-hash ((:BOOK-LENGTH . 55215) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "base.cert" changed after "base" was included, so
you should probably undo back through the command that included "base"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/var-book.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:DEFDATA-ATTACH
        "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")))
and book hash ((:BOOK-LENGTH . 5584) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "var-book" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
   (:EV-FNCALL-W-OK
        "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
        "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")
   (:DEFDATA-ATTACH
        "/Users/benboskin/acl2/books/acl2s/defdata/var-book.lisp")))
and book-hash ((:BOOK-LENGTH . 5584) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "var-book.cert" changed after "var-book" was included,
so you should probably undo back through the command that included
"var-book" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/tau-characterization.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
      "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")))
and book hash ((:BOOK-LENGTH . 25180) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "tau-characterization" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
  (:EV-FNCALL-W-OK
      "/Users/benboskin/acl2/books/acl2s/defdata/tau-characterization.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp"
      "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp")))
and book-hash ((:BOOK-LENGTH . 25180) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "tau-characterization.cert" changed after 
"tau-characterization" was included, so you should probably undo back
through the command that included "tau-characterization" (or, if you
are using an image created by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/coi/util/pse\
udo-translate.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4269) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "pseudo-translate" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4269) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/map.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 9706) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "map" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 9706) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "map.cert" changed after "map" was included, so
you should probably undo back through the command that included "map"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/record.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 31597) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "record" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 31597) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "record.cert" changed after "record" was included,
so you should probably undo back through the command that included
"record" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/alistof.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 5148) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "alistof" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 5148) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "alistof.cert" changed after "alistof" was included,
so you should probably undo back through the command that included
"alistof" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/listof.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 4667) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "listof" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 4667) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "listof.cert" changed after "listof" was included,
so you should probably undo back through the command that included
"listof" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/register-combinator.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 3243) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "register-combinator" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 3243) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "register-combinator.cert" changed after 
"register-combinator" was included, so you should probably undo back
through the command that included "register-combinator" (or, if you
are using an image created by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/register-type.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 6478) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "register-type" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 6478) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "register-type.cert" changed after "register-type"
was included, so you should probably undo back through the command
that included "register-type" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/defdata-attach.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 11253) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defdata-attach" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 11253) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "defdata-attach.cert" changed after "defdata-attach"
was included, so you should probably undo back through the command
that included "defdata-attach" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/register-data-constructor.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 5056) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "register-data-constructor" with
certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 5056) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "register-data-constructor.cert" changed after 
"register-data-constructor" was included, so you should probably undo
back through the command that included "register-data-constructor"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/library-support.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5705) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "library-support" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5705) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/make-
event/defconst-fast.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 968) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defconst-fast" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 968) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/defexec/othe\
r-apps/records/records.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 12004) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "records" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 12004) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/misc/total-
order.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 16211) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "total-order" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 16211) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/enumerators-gen.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 16315) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "enumerators-gen" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 16315) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "enumerators-gen.cert" changed after "enumerators-gen"
was included, so you should probably undo back through the command
that included "enumerators-gen" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/random-state.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17449) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "random-state" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17449) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/random-state-basis1.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5094) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "random-state-basis1" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5094) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/defdata-core.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 60660) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defdata-core" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 60660) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "defdata-core.cert" changed after "defdata-core"
was included, so you should probably undo back through the command
that included "defdata-core" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/builtin-combinators.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 21364) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "builtin-combinators" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
    (:EV-FNCALL-W-OK
         "/Users/benboskin/acl2/books/acl2s/defdata/builtin-combinators.lisp"
         "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 21364) (:BOOK-WRITE-DATE . 3749991471)),
AND NOTE that file "builtin-combinators.cert" changed after 
"builtin-combinators" was included, so you should probably undo back
through the command that included "builtin-combinators" (or, if you
are using an image created by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/defdata-util.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book hash ((:BOOK-LENGTH . 35869) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defdata-util" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:EV-FNCALL-W-OK
           "/Users/benboskin/acl2/books/acl2s/defdata/defdata-util.lisp")))
and book-hash ((:BOOK-LENGTH . 35869) (:BOOK-WRITE-DATE . 3748361588)),
AND NOTE that file "defdata-util.cert" changed after "defdata-util"
was included, so you should probably undo back through the command
that included "defdata-util" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/tools/templa\
tes.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17625) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "templates" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17968) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/da-
base.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 40744) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "da-base" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 40744) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/con\
s.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 5604) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "cons" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 5604) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/tools/rulese\
ts.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 17374) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "rulesets" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 17374) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/sup\
port.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 11514) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "support" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 11514) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/util/bst\
ar.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 54304) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "bstar" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 56357) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/tools/defmac\
fun.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8543) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defmacfun" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8543) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/coi/symbol-
fns/symbol-fns.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6858) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "symbol-fns" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6858) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/data-
structures/utilities.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 38005) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "utilities" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 38005) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/switchnat.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10509) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "switchnat" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10509) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/mv-proof.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 812) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "mv-proof" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 812) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/splitnat.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 27937) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "splitnat" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 27937) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/defdat\
a/num-list-fns.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4453) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "num-list-fns" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4453) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/fty/\
portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1435) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1435) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/centaur/bito\
ps/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1439) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1439) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/cowles/portc\
ullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 162) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 162) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/coi/util/por\
tcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1339) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1339) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/portcu\
llis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 205) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 205) (:BOOK-WRITE-DATE . 3748361588)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/coi/symbol-
fns/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1345) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1345) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/data-
structures/portcullis.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 20) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 20) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/acl2s/ccg/cc\
g.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:CCG "/Users/benboskin/acl2/books/acl2s/ccg/ccg.lisp")))
and book hash ((:BOOK-LENGTH . 353402) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "ccg" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:CCG "/Users/benboskin/acl2/books/acl2s/ccg/ccg.lisp")))
and book-hash ((:BOOK-LENGTH . 353402) (:BOOK-WRITE-DATE . 3749991471)),
AND NOTE that file "ccg.cert" changed after "ccg" was included, so
you should probably undo back through the command that included "ccg"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/all.\
lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/defcode.lisp"
                "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")
      (:TABLE-GUARD "/Users/benboskin/acl2/books/hacking/table-guard.lisp")))
and book hash ((:BOOK-LENGTH . 624) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "all" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/defcode.lisp"
                "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")
      (:TABLE-GUARD "/Users/benboskin/acl2/books/hacking/table-guard.lisp")))
and book-hash ((:BOOK-LENGTH . 624) (:BOOK-WRITE-DATE . 3748361589)),
AND NOTE that file "all.cert" changed after "all" was included, so
you should probably undo back through the command that included "all"
(or, if you are using an image created by save-exec, consider rebuilding
that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/hack\
ing-xdoc.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 10363) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "hacking-xdoc" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 10363) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/tabl\
e-guard.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/defcode.lisp"
                "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")
      (:TABLE-GUARD "/Users/benboskin/acl2/books/hacking/table-guard.lisp")))
and book hash ((:BOOK-LENGTH . 3138) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "table-guard" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/defcode.lisp"
                "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")
      (:TABLE-GUARD "/Users/benboskin/acl2/books/hacking/table-guard.lisp")))
and book-hash ((:BOOK-LENGTH . 3138) (:BOOK-WRITE-DATE . 3748361589)),
AND NOTE that file "table-guard.cert" changed after "table-guard" was
included, so you should probably undo back through the command that
included "table-guard" (or, if you are using an image created by save-
exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/subs\
umption.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6183) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "subsumption" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6183) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/brid\
ge.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6084) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "bridge" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6084) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/rede\
fun.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 4516) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "redefun" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 4516) (:BOOK-WRITE-DATE . 3749991471)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/raw.\
lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 8256) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "raw" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 8256) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/defc\
ode.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:DEFCODE "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp"
                   "/Users/benboskin/acl2/books/hacking/defcode.lisp")))
and book hash ((:BOOK-LENGTH . 7636) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defcode" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS (:DEFCODE "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp"
                   "/Users/benboskin/acl2/books/hacking/defcode.lisp")))
and book-hash ((:BOOK-LENGTH . 7636) (:BOOK-WRITE-DATE . 3748361589)),
AND NOTE that file "defcode.cert" changed after "defcode" was included,
so you should probably undo back through the command that included
"defcode" (or, if you are using an image created by save-exec, consider
rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/prog\
n-bang-enh.lisp" with certificate annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")))
and book hash ((:BOOK-LENGTH . 1874) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "progn-bang-enh" with certificate
annotations
  
((:SKIPPED-PROOFSP)
 (:AXIOMSP)
 (:TTAGS
      (:DEFCODE "/Users/benboskin/acl2/books/hacking/progn-bang-enh.lisp")))
and book-hash ((:BOOK-LENGTH . 1874) (:BOOK-WRITE-DATE . 3748361589)),
AND NOTE that file "progn-bang-enh.cert" changed after "progn-bang-enh"
was included, so you should probably undo back through the command
that included "progn-bang-enh" (or, if you are using an image created
by save-exec, consider rebuilding that image);
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/defs\
truct-parsing.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6978) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "defstruct-parsing" with certificate
annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 6978) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/hack\
er.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 34186) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "hacker" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 34186) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/doc-
section.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 382) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "doc-section" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 382) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/misc/expande\
r.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 71300) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "expander" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 71071) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/top.lis\
p" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 21791) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "top" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 21548) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/book-
thms.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 9856) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "book-thms" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 9856) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/xdoc/base.li\
sp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 6670) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "base" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 7676) (:BOOK-WRITE-DATE . 3748361594)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/hacking/rewr\
ite-code.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 26615) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "rewrite-code" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 26615) (:BOOK-WRITE-DATE . 3748361589)),
so book recertification is probably required;
-- its certificate requires the book "/Users/benboskin/acl2/books/std/portcull\
is.lisp" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book hash ((:BOOK-LENGTH . 1966) (:BOOK-WRITE-DATE . 3722253174)),
but we have included a version of "portcullis" with certificate annotations
  ((:SKIPPED-PROOFSP) (:AXIOMSP) (:TTAGS))
and book-hash ((:BOOK-LENGTH . 1966) (:BOOK-WRITE-DATE . 3748361592)),
so book recertification is probably required.


ACL2 Observation in ( INCLUDE-BOOK "redef" ...):  Reading .port file,
/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.port.

ACL2 has processed the nine commands in file 
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.port".

TTAG NOTE: Adding ttag :REDEF+ from book /Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.

Summary
Form:  ( INCLUDE-BOOK "redef" ...)
Rules: NIL
Warnings:  Uncertified and Compiled file
Time:  0.55 seconds (prove: 0.00, print: 0.00, other: 0.55)
 "/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/redef.lisp"
ACL2S !>(include-book "itest-cgen")

ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "itest-cgen" ...): 
Unable to load compiled file for book
  /Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-
cgen.lisp
because that book is not certified.  See :DOC include-book.  No load
was in progress for any parent book.


ACL2 Warning [Uncertified] in ( INCLUDE-BOOK "itest-cgen" ...):  There
is no certificate on file for 
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-cgen.lisp".



Summary
Form:  ( INCLUDE-BOOK "itest-cgen" ...)
Rules: NIL
Warnings:  Uncertified and Compiled file
Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
 "/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-cgen.lisp"
ACL2S !>(include-book "itest-ithm")

ACL2 Warning [Compiled file] in ( INCLUDE-BOOK "itest-ithm" ...): 
Unable to load compiled file for book
  /Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-
ithm.lisp
because that book is not certified.  See :DOC include-book.  No load
was in progress for any parent book.


ACL2 Warning [Uncertified] in ( INCLUDE-BOOK "itest-ithm" ...):  There
is no certificate on file for 
"/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-ithm.lisp".



Summary
Form:  ( INCLUDE-BOOK "itest-ithm" ...)
Rules: NIL
Warnings:  Uncertified and Compiled file
Time:  0.04 seconds (prove: 0.00, print: 0.00, other: 0.04)
 "/Users/benboskin/Desktop/inv-gen-game-chi18-copy/src/backend/itest-ithm.lisp"
ACL2S !>(defmacro intp (x) `(integerp ,x))

Summary
Form:  ( DEFMACRO INTP ...)
Rules: NIL
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
 INTP
ACL2S !>(defunc symbol-string-app (l)
  :input-contract (symbol-listp l)
  :output-contract (stringp (symbol-string-app l))
  (if (endp l)
      ""
    (concatenate 'string (symbol-name (car l))
                 (symbol-string-app (cdr l)))))
Query: Testing body contracts ... 

TTAG NOTE: Adding ttag :CGEN-TESTING-DRIVER-LOOP from the top level loop.

***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Unsupported host Lisp for CGEN (only CCL and multi-threaded SBCL are supported).
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>(defunc make-symbl (l)
  :input-contract (and (symbol-listp l) l)
  :output-contract (symbolp (make-symbl l))
  (intern-in-package-of-symbol
   (symbol-string-app l)
   (car l)))


ERROR in translate1-cw:  The symbol SYMBOL-STRING-APP (in package "ACL2S")
has neither a function nor macro definition in ACL2.  Please define
it.  See :DOC near-misses.  Note:  this error occurred in the context
(SYMBOL-STRING-APP L).



ACL2 Error in ( DEFUN MAKE-SYMBL ...):  The symbol SYMBOL-STRING-APP
(in package "ACL2S") has neither a function nor macro definition in
ACL2.  Please define it.  See :DOC near-misses.  Note:  this error
occurred in the context (SYMBOL-STRING-APP L).

ACL2S !>(defunc symbol-string-app (l)
  :input-contract (symbol-listp l)
  :output-contract (stringp (symbol-string-app l))
  (if (endp l)
      ""
    (concatenate 'string (symbol-name (car l))
                 (symbol-string-app (cdr l)))))
Query: Testing body contracts ... 

TTAG NOTE: Adding ttag :CGEN-TESTING-DRIVER-LOOP from the top level loop.

***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Unsupported host Lisp for CGEN (only CCL and multi-threaded SBCL are supported).(defun variables-from-types (types)
  (cond
   ((endp types) nil)
   ((consp (car types))
    (cons (cadar types)
	  (variables-from-types (cdr types))))
   (t (variables-from-types (cdr types)))))
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>


ACL2 Error in TOP-LEVEL:  The symbol 
*********************************************** (in package "ACL2S")
has the syntax of a constant, but has not been defined.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as THE, are not allowed.
See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as MESSAGE, are not
allowed. See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as ABOVE, are not
allowed. See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as MIGHT, are not
allowed. See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as EXPLAIN, are not
allowed. See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as THE, are not allowed.
See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as ERROR., are not
allowed. See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as IF, are not allowed.
See :DOC ASSIGN and :DOC @.

ACL2S !>

ACL2 Error in TOP-LEVEL:  Global variables, such as NOT, are not allowed.
See :DOC ASSIGN and :DOC @.

ACL2S !>
***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Illegal comma: first comma processed while reading top-level form.
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>(defun variables-from-types (types)
  (cond
   ((endp types) nil)
   ((consp (car types))
    (cons (cadar types)
	  (variables-from-types (cdr types))))
   (t (variables-from-types (cdr types)))))

CCG analysis has succeeded in proving termination of VARIABLES-FROM-TYPES
using CCMs over the following variables: (TYPES). Thus, we admit this
function under the principle of definition.  We observe that the type
of VARIABLES-FROM-TYPES is described by the theorem 
(TRUE-LISTP (VARIABLES-FROM-TYPES TYPES)).  We used primitive type
reasoning.

Summary
Form:  ( DEFUN VARIABLES-FROM-TYPES ...)
Rules: ((:FAKE-RUNE-FOR-TYPE-SET NIL)
        (:WELL-FOUNDED-RELATION ACL2::WELL-FOUNDED-L<))
Time:  0.01 seconds (prove: 0.00, print: 0.00, other: 0.01)
 VARIABLES-FROM-TYPES
ACL2S !>(defunc symbol-string-app (l)
  :input-contract (symbol-listp l)
  :output-contract (stringp (symbol-string-app l))
  (if (endp l)
      ""
    (concatenate 'string (symbol-name (car l))
                 (symbol-string-app (cdr l)))))
Query: Testing body contracts ... 

TTAG NOTE: Adding ttag :CGEN-TESTING-DRIVER-LOOP from the top level loop.

***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Unsupported host Lisp for CGEN (only CCL and multi-threaded SBCL are supported).
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>(defunc foo (e)
  :input-contract t
  :output-contract t
  e)
Query: Testing body contracts ... 


ACL2 Error in ( THM ...):  You have duplicate occurrences of the hint
keyword :BACKTRACK in your hint.  While duplicate occurrences of keywords
are permitted by CLTL, the semantics ignores all but the left-most.
We therefore suspect that you have made a mistake in presenting your
hints.



ACL2 Error in CGEN::SIMPLIFY-TERM:  You have duplicate occurrences
of the hint keyword :BACKTRACK in your hint.  While duplicate occurrences
of keywords are permitted by CLTL, the semantics ignores all but the
left-most.  We therefore suspect that you have made a mistake in presenting
your hints.

Query: Testing function contract ... 


ACL2 Error in ( THM ...):  You have duplicate occurrences of the hint
keyword :BACKTRACK in your hint.  While duplicate occurrences of keywords
are permitted by CLTL, the semantics ignores all but the left-most.
We therefore suspect that you have made a mistake in presenting your
hints.

Elapsed Run Time: 0.03 seconds
Form:  ( DEFUN FOO ...)
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
Form:  ( VERIFY-GUARDS FOO ...)
Time:  0.00 seconds (prove: 0.00, print: 0.00, other: 0.00)
Elapsed Run Time: 0.07 seconds

Function Name : FOO 
Termination proven -------- [*] 
Function Contract proven -- [*] 
Body Contracts proven ----- [*]
 T
ACL2S !>(defunc symbol-string-app (l)
  :input-contract (symbol-listp l)
  :output-contract (stringp (symbol-string-app l))
  (if (endp l)
      ""
    (concatenate 'string (symbol-name (car l))
                 (symbol-string-app (cdr l)))))
Query: Testing body contracts ... 

TTAG NOTE: Adding ttag :CGEN-TESTING-DRIVER-LOOP from the top level loop.

***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Unsupported host Lisp for CGEN (only CCL and multi-threaded SBCL are supported).
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>(defunc foo (e)
  :input-contract (integerp e)
  :output-contract (consp (foo e))
  (cons e nil))


ACL2 Error in ( DEFUN FOO ...):  The name FOO is in use as a function.
Note that the proposed body for FOO,

(CONS E NIL),

differs from the existing body,

(MBE :LOGIC (IF T E (ACL2S-UNDEFINED 'FOO (LIST E))) :EXEC E).

The redefinition feature is currently off.  See :DOC ld-redefinition-
action.


Note: FOO was previously defined at the top level.

ACL2S !>:u
 L         4:x(DEFUN VARIABLES-FROM-TYPES (TYPES) ...)
ACL2S !>(defunc foo (e)
  :input-contract (integerp e)
  :output-contract (consp (foo e))
  (cons e nil))
Query: Testing body contracts ... 


ACL2 Error in ( THM ...):  You have duplicate occurrences of the hint
keyword :BACKTRACK in your hint.  While duplicate occurrences of keywords
are permitted by CLTL, the semantics ignores all but the left-most.
We therefore suspect that you have made a mistake in presenting your
hints.



ACL2 Error in CGEN::SIMPLIFY-TERM:  You have duplicate occurrences
of the hint keyword :BACKTRACK in your hint.  While duplicate occurrences
of keywords are permitted by CLTL, the semantics ignores all but the
left-most.  We therefore suspect that you have made a mistake in presenting
your hints.

Query: Testing function contract ... 

TTAG NOTE: Adding ttag :CGEN-TESTING-DRIVER-LOOP from the top level loop.

***********************************************
************ ABORTING from raw Lisp ***********
********** (see :DOC raw-lisp-error) **********
Error:  Unsupported host Lisp for CGEN (only CCL and multi-threaded SBCL are supported).
***********************************************

The message above might explain the error.  If not, and
if you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC raw-lisp-error and see :DOC guards.

To enable breaks into the debugger (also see :DOC acl2-customization):
(SET-DEBUGGER-ENABLE T)
ACL2S !>(good-bye)
bash-3.2$ ls
#*shell*#			loop-invariant-book.lisp
#bare-bones.lisp#		loop-invariant-book.port
#inv-game-raw.lsp#		new-startup.lisp
#loop-invariant-book.lisp#	new-startup.lisp~
#new-startup.lisp#		programs.lisp
#notes.txt#			redef.cert
#startup.lisp#			redef.dx64fsl
#term-defs.json#		redef.lisp
#term-defs.txt#			redef.port
#test.lisp#			server.py
*shell*				simple.lisp
README.md			sockets.py
acl2				start-bridge
acl2s				start-bridge~
bare-bones.lisp			start.lisp
bare-bones.lisp~		start2.lisp
create-inv-game-image.sh	startup-fn.lisp~
create-inv-game-image.sh~	startup.lisp
explain.txt			startup.lisp~
explain.txt~			term-defs.txt
inv-game-acl2s			term-defs.txt~
inv-game-acl2s.dx86cl64		test.js
inv-game-raw.lsp		test.lisp
inv-game-raw.lsp~		test.lisp~
itest-cgen.lisp			use-raw-lisp.lisp
itest-ithm.lisp			use-raw-lisp.lisp~
bash-3.2$ cd ..
bash-3.2$ cd ~/acl2/books/acl2s
bash-3.2$ ls
Makefile-tmp				demos
acl2s-mode.lsp				doc.cert
base-theory.cert			doc.cert.out
base-theory.cert.out			doc.dx32fsl
base-theory.dx32fsl			doc.fasl
base-theory.fasl			doc.lisp
base-theory.lisp			doc.port
base-theory.port			mode-acl2s-dependencies.cert
ccg					mode-acl2s-dependencies.cert.out
cert.acl2				mode-acl2s-dependencies.dx32fsl
cgen					mode-acl2s-dependencies.fasl
custom.cert				mode-acl2s-dependencies.lisp
custom.cert.out				mode-acl2s-dependencies.port
custom.dx32fsl				package.lsp
custom.fasl				portcullis.acl2
custom.lisp				portcullis.cert
custom.port				portcullis.cert.out
defdata					portcullis.dx32fsl
defunc-regression.lsp			portcullis.lisp
defunc.cert				portcullis.port
defunc.cert.out				utilities.cert
defunc.dx32fsl				utilities.cert.out
defunc.fasl				utilities.dx32fsl
defunc.lisp				utilities.lisp
defunc.port				utilities.port
bash-3.2$ ls
Makefile-tmp				demos
acl2s-mode.lsp				doc.cert
base-theory.cert			doc.cert.out
base-theory.cert.out			doc.dx32fsl
base-theory.dx32fsl			doc.fasl
base-theory.fasl			doc.lisp
base-theory.lisp			doc.port
base-theory.port			mode-acl2s-dependencies.cert
ccg					mode-acl2s-dependencies.cert.out
cert.acl2				mode-acl2s-dependencies.dx32fsl
cgen					mode-acl2s-dependencies.fasl
custom.cert				mode-acl2s-dependencies.lisp
custom.cert.out				mode-acl2s-dependencies.port
custom.dx32fsl				package.lsp
custom.fasl				portcullis.acl2
custom.lisp				portcullis.cert
custom.port				portcullis.cert.out
defdata					portcullis.dx32fsl
defunc-regression.lsp			portcullis.lisp
defunc.cert				portcullis.port
defunc.cert.out				utilities.cert
defunc.dx32fsl				utilities.cert.out
defunc.fasl				utilities.dx32fsl
defunc.lisp				utilities.lisp
defunc.port				utilities.port
bash-3.2$ ls *.lisp
base-theory.lisp		mode-acl2s-dependencies.lisp
custom.lisp			portcullis.lisp
defunc.lisp			utilities.lisp
doc.lisp
bash-3.2$ pwd
/Users/benboskin/acl2/books/acl2s
bash-3.2$ cd ~/lemmas/
bash-3.2$ acl2s
This is SBCL 1.1.6.0-3c5581a, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

 ACL2 Version 8.1 built October 31, 2018  11:50:14
                   then October 31, 2018  12:29:56.
 Copyright (C) 2018, Regents of the University of Texas
 ACL2 comes with ABSOLUTELY NO WARRANTY.  This is free software and you
 are welcome to redistribute it under certain conditions.  For details,
 see the LICENSE file distributed with ACL2.

 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 + WARNING: This is NOT an ACL2 release; it is a development snapshot  +
 + (git commit hash: ef4c1937e06c436d55e9280425c5c580f63fdec7).        +
 + On rare occasions development snapshots may be incomplete, fragile, +
 + or unable to pass the usual regression tests.                       +
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

 Initialized with (INITIALIZE-ACL2 'INCLUDE-BOOK *ACL2-PASS-2-FILES*).
 See the documentation topic note-8-1 for recent changes.
 Note: We have modified the prompt in some underlying Lisps to further
 distinguish it from the ACL2 prompt.

MODIFICATION NOTICE:

ACL2s Mode

ACL2 Version 8.1.  Level 1.  Cbd "/Users/benboskin/lemmas/".
System books directory "/Users/benboskin/acl2/books/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2S !>(defun mymap (f ls)
  (cond
   ((endp ls) nil)
   (t (cons (apply f (list (car ls)))
	    (mymap f (cdr ls))))))


ACL2 Error in ( DEFUN MYMAP ...):  The symbol APPLY (in package 
"COMMON-LISP") has neither a function nor macro definition in ACL2.
Moreover, this symbol is in the main Lisp package; hence, you cannot
define it in ACL2.  See :DOC near-misses.  Note:  this error occurred
in the context (APPLY F (LIST (CAR LS))).


Summary
Form:  ( DEFUN MYMAP ...)
Rules: NIL
Time:  0.02 seconds (prove: 0.00, print: 0.00, other: 0.02)

ACL2 Error in ( DEFUN MYMAP ...):  See :DOC failure.

******** FAILED ********
ACL2S !>:q

Exiting the ACL2 read-eval-print loop.  To re-enter, execute (LP).
* (defun mymap (f ls)
  (cond
   ((endp ls) nil)
   (t (cons (apply f (list (car ls)))
	    (mymap f (cdr ls))))))

MYMAP
* (defun lvar (e) (list 'lvar e))

LVAR
* (defun lvarp (e)
  (and (consp e)
       (equal (car e) 'lvar)
       (consp (cdr e))
       (symbolp (cadr e))))

LVARP
* (defun substp (s)
  (cond
   ((equal s '(SUBST))
    (and (consp (car s))
	 (lvarp (caar s))
	 (substp (cdr s))))))

SUBSTP
* (defun empty? (s)
  (equal s '(SUBST)))

EMPTY?
* (defun lookup (e s)
  (cond
   ((empty? s) nil)
   ((equal e (caar s)) (car s))
   (t (lookup e (cdr s)))))

LOOKUP
* (defun walk (v s)
  (let ((a (and (lvarp v) (lookup v s))))
    (cond
     ((consp a) (walk (cadr a) s))
     (t v))))

WALK
* (defun ext-s (x v s)
  (cons `(,x ,v) s))

EXT-S
* (defun unify (u v s)
  (let ((u (walk u s))
	(v (walk v s)))
    (cond
     ((equal u v) s)
     ((lvarp u) (ext-s u v s))
     ((lvarp v) (ext-s v u s))
     ((and (consp u) (consp v))
      (let ((s (unify (car u) (car v) s)))
	(and s
	     (unify (cdr u) (cdr v) s))))
     (t nil))))

UNIFY
* (defun walk* (v s)
  (let ((v (walk v s)))
    (cond
     ((lvarp v) v)
     ((consp v)
      (cons
       (walk* (car v) s)
       (walk* (cdr v) s)))
     (t v))))

WALK*
* (defun get-name (n)
  (cond
   ((equal n 0) "0")
   ((equal n 1) "1")
   ((equal n 2) "2")
   ((equal n 3) "3")
   ((equal n 4) "4")
   ((equal n 5) "5")
   ((equal n 6) "6")
   ((equal n 7) "7")
   ((equal n 8) "8")
   ((equal n 9) "9")
   (t (concatenate 'string
		   (get-name (floor n 10))
		   (get-name (mod n 10))))))

GET-NAME
* (defun reify-sym (n)
  (intern (concatenate 'string "_" (get-name n))))

REIFY-SYM
* (defun reify-s (v r)
  (let ((v (walk v r)))
    (cond
     ((lvarp v)
      (let ((n (length r)))
	(let ((rn (reify-sym (- n 1))))
	  (cons `(,v ,rn) r))))
     ((consp v)
      (let ((r (reify-s (car v) r)))
	(reify-s (cdr v) r)))
     (t r))))

REIFY-S
* (defun reify (v)
  (lambda (s)
    (let ((v (walk* v s)))
      (let ((r (reify-s v '(SUBST))))
	(walk* v r)))))

REIFY
* (defun == (u v)
  (lambda (s)
    (let ((s (unify u v s)))
      (if s `(,s) '()))))

==
* (defun succeed ()
  (lambda (s)
    `(,s)))

SUCCEED
* (defun fail ()
  (lambda (s)
    '()))
STYLE-WARNING: redefining ACL2::FAIL in DEFUN

FAIL
* (defun append-inf (s-inf t-inf)
  (cond
   ((equal nil s-inf) t-inf)
   ((consp s-inf)
    (cons (car s-inf)
	  (append-inf (cdr s-inf) t-inf)))
   (t (lambda ()
	   (append-inf t-inf (apply s-inf ()))))))

APPEND-INF
* (defun disj2 (g1 g2)
  (lambda (s)
    (append-inf (apply g1 (list s))
		(apply g2 (list s)))))

DISJ2
* (defun take-inf (n s-inf)
  (cond
   ((and n (equal n 0)) '())
   ((equal s-inf nil) '())
   ((consp s-inf)
    (cons (car s-inf)
	  (take-inf (and n (- n 1))
		    (cdr s-inf))))
   (t (take-inf n (apply s-inf ())))))

TAKE-INF
* (defun conj2 (g1 g2)
  (lambda (s)
    (append-map-inf g2 (apply g1 (list s)))))

CONJ2
* (defun append-map-inf (g s-inf)
  (cond
   ((equal s-inf '()) '())
   ((consp s-inf)
    (append-inf (apply g (list (car s-inf)))
		(append-map-inf g (cdr s-inf))))
   (t (lambda ()
	(append-map-inf g (apply s-inf ()))))))

APPEND-MAP-INF
* (defun call/fresh (name f)
  (apply f (list (lvar name))))

CALL/FRESH
* (defun run-goal (n g)
  (take-inf n (apply g (list '(SUBST)))))

RUN-GOAL
* (defmacro disj (gs)
  `(cond
    ((endp ',gs) (fail))
    ((equal (length ',gs) 1) ,(car gs))
    ((consp ',gs)
     (disj2 ,(car gs)
	    (disj ,(cdr gs))))))

DISJ
* (defmacro conj (gs)
  `(cond
    ((endp ',gs) (succeed))
    ((equal (length ',gs) 1) ,(car gs))
    ((consp ',gs)
     (conj2 ,(car gs)
	    (conj ,(cdr gs))))))

CONJ
* (defmacro conde-help (gs)
  `(cond
    ((endp ',gs) (fail))
    ((equal (length ',gs) 1) (conj ,(car gs)))
    (t
     (disj2 (conj ,(car gs))
	    (conde-help ,(cdr gs))))))

CONDE-HELP
* (defmacro conde (&rest gs)
  `(conde-help ,gs))

CONDE
* (defmacro fresh-help (xs gs)
  `(cond
    ((endp ',xs) (conj ,gs))
    ((consp ',xs)
     (call/fresh (gensym)
		 (lambda (,(car xs))
		   (fresh-help ,(cdr xs) ,gs))))))

FRESH-HELP
* (defmacro fresh (xs &rest gs)
  `(fresh-help ,xs ,gs))

FRESH
* (defmacro defrel (name xs &rest gs)
  `(defun ,name ,xs
     (lambda (s)
       (lambda ()
	 (apply (conj ,gs) (list s))))))

DEFREL
* (defmacro run* (q &rest gs)
  `(run nil ,q . ,gs))

RUN*
* (defmacro run-more (n xs gs)
  (let ((q (gensym)))
    `(let ((q-var (lvar ',q)))
       (mymap (reify q-var)
	      (run-goal ,n
			(fresh ,xs
			       (== q-var (list . ,xs))
			       . ,gs))))))

RUN-MORE
* (defmacro run (n xs &rest gs)
  `(cond
    ((symbolp ',xs)
     (let ((q (lvar ',xs)))
       (mymap (reify q)
	       (run-goal ,n (conj ,gs)))))
    (t (run-more ,n ,xs ,gs))))

RUN
* (defmacro conds (&rest gs))

CONDS
* (defun gather-grouping (gs)
  (cond
   ((endp gs) nil)
   (t (append (apply (car gs) ())
	      (gather-grouping (cdr gs))))))

GATHER-GROUPING
* (defun foo () '(4))

FOO
* (defun bar () '(3))

BAR
* (gather-grouping '(foo bar))

(4 3)
* (defun expr-symbols (ls)
  (cond
   ((symbolp ls) '(vars))
   ((equal (car ls) 'INTERNAL-NUMBER) '(numbers))
   ((equal (car ls) 'INTERNAL-SYMBOL) '(symbols))
   ((equal (car ls) 'INTERNAL-CONS) '(pairs))
   (t (cons (car ls)
	    (reduce #'append (mapcar #'expr-symbols (cdr ls))
		    :initial-value nil)))))

EXPR-SYMBOLS
* (expr-symbols '(append (reverse (cons a b) (INTERNAL-NUMBER 0 1 1))))

(APPEND REVERSE CONS VARS VARS NUMBERS)
* (expr-symbols '(foo (append (reverse (cons a b) (INTERNAL-NUMBER 0 1 1))))
)

(FOO APPEND REVERSE CONS VARS VARS NUMBERS)
* (defun exprs-syms (lls)
  (reduce #'append (mapcar #'expr-symbols lls)
	  :initial-value nil))

EXPRS-SYMS
* (defun expr-symbols (ls)
  (cond
   ((symbolp ls) '(vars))
   ((equal (car ls) 'INTERNAL-NUMBER) '(numbers))
   ((equal (car ls) 'INTERNAL-SYMBOL) '(symbols))
   ((equal (car ls) 'INTERNAL-CONS) '(pairs))
   (t (cons (car ls) (exprs-syms (cdr ls))))))
STYLE-WARNING: redefining ACL2::EXPR-SYMBOLS in DEFUN

EXPR-SYMBOLS
* (defun exprs-symbols (lls)
  (reduce #'append (mapcar #'expr-symbols lls)
	  :initial-value nil))

EXPRS-SYMBOLS
* (defun expr-symbols (ls)
  (cond
   ((symbolp ls) '(vars))
   ((equal (car ls) 'INTERNAL-NUMBER) '(numbers))
   ((equal (car ls) 'INTERNAL-SYMBOL) '(symbols))
   ((equal (car ls) 'INTERNAL-CONS) '(pairs))
   (t (cons (car ls) (exprs-symbols (cdr ls))))))
STYLE-WARNING: redefining ACL2::EXPR-SYMBOLS in DEFUN

EXPR-SYMBOLS
* (expr-symbols '(append (reverse (cons a b) (INTERNAL-NUMBER 0 1 1))))

(APPEND REVERSE CONS VARS VARS NUMBERS)
* (defun gather-grouping (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	  nil))
; in: DEFUN GATHER-GROUPING
;     (REDUCE #'APPEND (MAPCAR #'(LAMBDA (ACL2::E) (APPLY ACL2::E NIL)) ACL2::GS)
;             NIL)
; 
; caught WARNING:
;   The function has an odd number of arguments in the keyword portion.
; 
; compilation unit finished
;   caught 1 WARNING condition
STYLE-WARNING: redefining ACL2::GATHER-GROUPING in DEFUN

GATHER-GROUPING
* (defun gather-grouping (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	  nil))
; in: DEFUN GATHER-GROUPING
;     (REDUCE #'APPEND (MAPCAR #'(LAMBDA (ACL2::E) (APPLY ACL2::E NIL)) ACL2::GS)
;             NIL)
; 
; caught WARNING:
;   The function has an odd number of arguments in the keyword portion.
; 
; compilation unit finished
;   caught 1 WARNING condition
STYLE-WARNING: redefining ACL2::GATHER-GROUPING in DEFUN

GATHER-GROUPING
* (defun gg (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	  nil))
; in: DEFUN GG
;     (REDUCE #'APPEND (MAPCAR #'(LAMBDA (ACL2::E) (APPLY ACL2::E NIL)) ACL2::GS)
;             NIL)
; 
; caught WARNING:
;   The function has an odd number of arguments in the keyword portion.
; 
; compilation unit finished
;   caught 1 WARNING condition

GG
* (defun gg (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	  nil))
; in: DEFUN GG
;     (REDUCE #'APPEND (MAPCAR #'(LAMBDA (ACL2::E) (APPLY ACL2::E NIL)) ACL2::GS)
;             NIL)
; 
; caught WARNING:
;   The function has an odd number of arguments in the keyword portion.
; 
; compilation unit finished
;   caught 1 WARNING condition
STYLE-WARNING: redefining ACL2::GG in DEFUN

GG
* (gg '(foo bar))

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR: odd number of &KEY arguments

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(REDUCE #<FUNCTION APPEND> ((4) (3)) NIL) [more,optional]
0] (mapcar #'(lambda (e) (apply e ())) '(foo bar))

((4) (3))
0] (defun gg (gs)
  (reduce #'(lambda (a b) (append a b))
	  (mapcar #'(lambda (e) (apply e ())) gs)
	  nil))
; in: DEFUN GG
;     (REDUCE #'(LAMBDA (ACL2::A ACL2::B) (APPEND ACL2::A ACL2::B))
;             (MAPCAR #'(LAMBDA (ACL2::E) (APPLY ACL2::E NIL)) ACL2::GS) NIL)
; 
; caught WARNING:
;   The function has an odd number of arguments in the keyword portion.
; 
; compilation unit finished
;   caught 1 WARNING condition
STYLE-WARNING: redefining ACL2::GG in DEFUN
GG
0] (gg '(foo bar))


debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR: odd number of &KEY arguments

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

(REDUCE #<FUNCTION (LAMBDA (A B) :IN GG) {24C51BC5}> ((4) (3)) NIL) [more,optional]
0[2] (defun gg (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	 :initial-value nil))

STYLE-WARNING: redefining ACL2::GG in DEFUN
GG
0[2] (defun gg (gs)
  (reduce #'append
	  (mapcar #'(lambda (e) (apply e ())) gs)
	 :initial-value nil))

STYLE-WARNING: redefining ACL2::GG in DEFUN
GG
0[2] (gg '(foo bar))

(4 3)
0[2] (defmacro condi (all-gs includes &rest gs)
  `(let* ((all-lns (mapcar #'car ',gs))
	  (inc-gps (split-forms all-lns ',all-gs ',includes nil nil nil))
	  (inc-lns (append (car inc-gps)
			   (gg (cadr inc-gps))
			   (exprs-symbols (caddr inc-gps))))
	  (new-gs (remove-if-not #'(lambda (e) (member (car a) inc-lns)) gs)))
     `(conde . ,new-gs)))

CONDI
0[2] 